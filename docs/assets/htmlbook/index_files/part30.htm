<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>IIIII/IIII//I/I/III//I/IIIII//I/I///I</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part29.htm">&lt; Previous</a><span> | </span><a href="../index.html">Contents</a><span> | </span><a href="part31.htm">Next &gt;</a></p><p class="s1366" style="padding-left: 160pt;text-indent: 0pt;line-height: 13pt;text-align: left;">IIIII/IIII//I/I/III//I/IIIII//I/I///I</p><p style="padding-left: 161pt;text-indent: 0pt;line-height: 88%;text-align: left;"><span style=" color: #727272;">double </span>v <span style=" color: #505050;">x </span>dx[i) dx[<span style=" color: #828282;">j)</span><span style=" color: #505050;">; </span><span style=" color: #727272;">double </span><span style=" color: #505050;">v_y </span><span class="s969">= </span>dy[i] - dy[<span style=" color: #828282;">j)</span>;</p><p style="padding-left: 161pt;text-indent: 0pt;line-height: 24pt;text-align: left;">double vn <span class="s1689">= </span>v x <span class="s1684">* </span>mtd <span style=" color: #727272;">norm </span><span style=" color: #505050;">x </span><span class="s1106">+ </span>v_y <span class="s1684">* </span>mtd<span style=" color: #828282;">_n</span>orm_y; if <span style=" color: #727272;">(vn </span><span class="s236">&gt; </span>0.0)</p><p style="padding-left: 186pt;text-indent: 0pt;text-align: left;">return;</p><p style="padding-top: 8pt;padding-left: 161pt;text-indent: 0pt;text-align: left;">double e<span style=" color: #828282;">l</span>astic<span style=" color: #828282;">_</span>constant <span class="s290">= </span>1.0;</p><p style="padding-top: 8pt;padding-left: 161pt;text-indent: 0pt;line-height: 14pt;text-align: left;">double impulse<span style=" color: #1D1D1D;">_</span><span style=" color: #505050;">x </span>m<span style=" color: #828282;">t</span>d <span style=" color: #727272;">norm </span><span class="s258">x </span><span class="s1688">* </span>(-(1 <span class="s1690">+ </span>elastic_consta <span style=" color: #828282;">nt}</span></p><p class="s647" style="padding-left: 86pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s1691">* </span>vn} / <span style=" color: #606060;">(iml </span><span class="s964">+ </span>im2}<span style=" color: #505050;">;</span></p><p style="padding-left: 161pt;text-indent: 0pt;line-height: 12pt;text-align: left;">double <span style=" color: #505050;">imp</span><span style=" color: #727272;">ulse_y </span><span class="s290">= </span>mtd_norm_y <span class="s1684">* </span>(-(1 <span class="s1106">+ </span>elastic constant}</p><p style="padding-left: 86pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span class="s1692">* </span><span style=" color: #828282;">vn} </span>/ (iml <span class="s102">+ </span>im2};</p><p style="padding-top: 11pt;padding-left: 161pt;text-indent: 0pt;line-height: 75%;text-align: left;"><b>dx[i) </b><span class="s99">+= </span>iml <span class="s1688">* </span>impulse_x; <span style=" color: #505050;">dy[i] </span><span class="s1570">+</span><span class="s30">= </span><span style=" color: #727272;">iml </span><span class="s1108">* </span>impulse<span style=" color: #1D1D1D;">_</span>y;</p><p style="padding-top: 11pt;padding-left: 160pt;text-indent: 0pt;line-height: 84%;text-align: left;">dx[j] <span style=" color: #727272;">+= </span>-im2 <span class="s1694">* </span><span style=" color: #505050;">impu</span><span style=" color: #727272;">lse_</span><span style=" color: #414141;">x; </span><span style=" color: #505050;">dy[j) </span><span class="s99">+= </span>-im2 <span class="s1608">* </span>impulse_y;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 8pt;padding-left: 161pt;text-indent: -25pt;line-height: 24pt;text-align: left;">class <span style=" color: #727272;">Timer</span><span style=" color: #505050;">Listener </span>impleme<span style=" color: #828282;">n</span>ts ActionListener { <span style=" color: #505050;">public </span>void actionPerformed(ActionEvent e) {</p><p class="s647" style="padding-left: 186pt;text-indent: 0pt;text-align: left;">re<span style=" color: #505050;">pa</span>int(}<span style=" color: #505050;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 135pt;text-indent: -24pt;text-align: left;">public static void main(String[] args} <span style=" color: #727272;">{ </span>AnimatedBalls frame= new AnimatedBa<span style=" color: #828282;">l</span>ls(}; frame.setTitle(<span style=" color: #414141;">&quot;</span><span style=" color: #727272;">Bouncing </span>Balls&quot;};</p><p style="padding-left: 135pt;text-indent: 0pt;text-align: left;">frame.setDefaultCloseOperatio <span style=" color: #828282;">n</span>(JFrame. <span style=" color: #828282;">E</span><span style=" color: #505050;">X</span><span style=" color: #727272;">IT_O</span><span style=" color: #505050;">N </span>CLOSE}; frame.setSize(W, H);</p><p style="padding-left: 136pt;text-indent: 0pt;text-align: left;">frame.setVisible(true);</p><p class="s1080" style="padding-top: 3pt;padding-left: 85pt;text-indent: 0pt;text-align: left;"><a name="bookmark104">Java Project: </a><span class="s1695">BouncingSticks</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s321" style="padding-left: 85pt;text-indent: 0pt;text-align: left;"><span class="s1082">Description: </span>Displays randomly generating <span style=" color: #232323;">rotating </span>sticks.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1082" style="padding-left: 84pt;text-indent: 0pt;text-align: left;">Sample Output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 121pt;text-indent: 0pt;text-align: left;"><span><img width="276" height="287" alt="image" src="Image_081.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-left: 85pt;text-indent: 0pt;text-align: left;">package <span style=" color: #6D6D6D;">bouncingsticks</span><span style=" color: #363636;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-left: 85pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span style=" color: #6D6D6D;">import </span>java<span style=" color: #363636;">.</span>awt<span style=" color: #363636;">.</span><span style=" color: #6D6D6D;">Color; import </span>java<span style=" color: #363636;">.</span>awt<span style=" color: #363636;">.</span>Graphics;</p><p class="s1002" style="padding-left: 85pt;text-indent: 0pt;text-align: left;"><span style=" color: #6D6D6D;">import java</span><span style=" color: #363636;">.</span>awt<span style=" color: #363636;">.</span>even<span style=" color: #363636;">t.</span>ActionEvent; <span style=" color: #6D6D6D;">import java.awt</span><span style=" color: #363636;">.</span>event.Act<span style=" color: #808080;">i</span>o<span style=" color: #808080;">n</span>Listener; import java<span style=" color: #363636;">.</span>awt<span style=" color: #363636;">.</span><span style=" color: #6D6D6D;">event.MouseAdapter; import </span>java<span style=" color: #363636;">.</span>awt.event<span style=" color: #363636;">.</span>MouseEvent; import <span style=" color: #6D6D6D;">java.util</span><span style=" color: #363636;">.</span>Random<span style=" color: #363636;">;</span></p><p class="s1002" style="padding-left: 85pt;text-indent: 0pt;text-align: justify;">import <span style=" color: #6D6D6D;">javax.swing.JFrame; </span>import javax<span style=" color: #363636;">.</span>swing.JPanel; <span style=" color: #6D6D6D;">import javax</span><span style=" color: #363636;">.</span>swing<span style=" color: #363636;">.</span><span style=" color: #6D6D6D;">Timer;</span></p><p class="s1002" style="padding-left: 110pt;text-indent: -25pt;line-height: 24pt;text-align: justify;">public class Bounc<span style=" color: #808080;">i</span>ngSticks extends <span style=" color: #6D6D6D;">JFrame </span>{ <span style=" color: #6D6D6D;">public static int W </span>600;</p><p class="s1001" style="padding-left: 110pt;text-indent: 0pt;text-align: left;">public <span style=" color: #5D5D5D;">static </span>int <span style=" color: #5D5D5D;">H 600;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1001" style="padding-left: 110pt;text-indent: 0pt;text-align: left;">public BouncingSticks() <span style=" color: #808080;">{</span></p><p class="s1002" style="padding-left: 135pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span style=" color: #808080;">M</span>ovingBal<span style=" color: #808080;">lP</span>anel <span style=" color: #6D6D6D;">ml=  new </span>MovingBallPanel(<span style=" color: #808080;">)</span>; this<span style=" color: #363636;">.</span><span style=" color: #6D6D6D;">add(ml);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-left: 110pt;text-indent: 0pt;text-align: left;">public <span style=" color: #6D6D6D;">static </span>void main(String<span style=" color: #919191;">[</span>) args) <span style=" color: #808080;">{</span></p><p class="s360" style="padding-top: 4pt;padding-left: 140pt;text-indent: 0pt;line-height: 106%;text-align: left;"><a name="bookmark105">BouncingSticks frame= new BouncingSticks(); frame.setTitle(&quot;Animated Ba</a><span style=" color: #8E8E8E;">ll</span>s&quot;); frame.setDefaultCloseOperation(JFrame.EXIT<span style=" color: #3D3D3D;">_</span>ON_CLOSE); frame<span style=" color: #3D3D3D;">.</span>setSize(W, H);</p><p class="s360" style="padding-left: 140pt;text-indent: 0pt;text-align: left;">frame<span style=" color: #3D3D3D;">.</span>setVisible(true);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s191" style="padding-left: 140pt;text-indent: -25pt;line-height: 24pt;text-align: left;"><span style=" color: #646464;">static class </span>MovingB<span style=" color: #505050;">allPa</span>nel extends JPanel <span style=" color: #8E8E8E;">{ </span><span style=" color: #646464;">public static int n </span>= <span style=" color: #646464;">800;</span></p><p class="s360" style="padding-left: 140pt;text-indent: 0pt;text-align: left;">public static double<span style=" color: #8E8E8E;">[</span>] a= new double[n<span style=" color: #8E8E8E;">]</span>;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 140pt;text-indent: 0pt;text-align: left;">public static double[<span style=" color: #3D3D3D;">] </span><span style=" color: #505050;">da </span>= new double[n]; public static double[<span style=" color: #3D3D3D;">] </span>r = new double[n<span style=" color: #8E8E8E;">]</span>; public static double[] <span style=" color: #505050;">dx </span>= new double[n]; public static double[<span style=" color: #3D3D3D;">] </span>dy <span style=" color: #777;">= </span>new double[n]; public static double[] x = new double[n]; publ<span style=" color: #8E8E8E;">i</span>c static double[] <span style=" color: #777;">y </span>= new <span style=" color: #505050;">do</span><span style=" color: #777;">uble[n]</span><span style=" color: #505050;">; </span>public static Color[] color= new Color[n];</p><p class="s360" style="padding-left: 141pt;text-indent: 0pt;line-height: 217%;text-align: left;">private <span style=" color: #777;">Timer timer= </span>new <span style=" color: #777;">Timer(30</span><span style=" color: #505050;">, </span>new TimerListener()); public MovingBallPanel() {</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s191" style="padding-top: 6pt;text-indent: 0pt;text-align: right;">5000);</p><p class="s360" style="padding-left: 34pt;text-indent: 0pt;line-height: 10pt;text-align: left;">this.setBackground(Color.black);</p><p class="s191" style="padding-top: 1pt;padding-left: 35pt;text-indent: 0pt;text-align: left;">initializeBalls()<span style=" color: #505050;">; </span><span style=" color: #646464;">timer.start();</span></p><p class="s360" style="padding-left: 60pt;text-indent: -26pt;line-height: 106%;text-align: left;"><span style=" color: #777;">this.addMouseListener(new </span>MouseAdapter() { pub<span style=" color: #8E8E8E;">lic </span>void mouseClicked(MouseEvent e)</p><p class="s360" style="padding-left: 86pt;text-indent: 0pt;text-align: left;">int delay= timer.getDelay();</p><p class="s360" style="padding-left: 111pt;text-indent: -26pt;text-align: left;">if (e<span style=" color: #3D3D3D;">.</span>getButton() == MouseEvent<span style=" color: #3D3D3D;">.</span>BUTTONl) <span style=" color: #777;">timer</span><span style=" color: #3D3D3D;">.</span>setDelay(delay <span class="s1380">&gt; </span>5? <span style=" color: #777;">delay </span><span style=" color: #3D3D3D;">- </span><span class="s381">5 5);</span></p><p class="s191" style="padding-left: 83pt;text-indent: 0pt;line-height: 13pt;text-align: center;"><span style=" color: #646464;">else </span>if (e.ge<span style=" color: #505050;">tB</span>utton() <span class="s1697">== </span><span style=" color: #646464;">MouseEvent.BUTTON3)</span></p><p class="s191" style="padding-top: 11pt;padding-left: 85pt;text-indent: 0pt;text-align: center;">timer<span style=" color: #505050;">.se</span>tDelay(delay <span style=" color: #646464;">&lt; </span>5000? <span style=" color: #646464;">de</span><span style=" color: #8E8E8E;">l</span><span style=" color: #646464;">ay + </span><span class="s115">5 </span><span class="s921">:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s377" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">} <span class="s1698">) </span><span class="s1096">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 166pt;text-indent: -25pt;text-align: left;">private void <span style=" color: #505050;">initia</span><span style=" color: #777;">lizeBalls() { Random </span>rand= new Random(); <span style=" color: #777;">double </span>maxBallRadius <span style=" color: #777;">= </span>40; <span style=" color: #777;">double </span>minBallRadius = 2; double maxBallSpeed <span style=" color: #777;">= </span>10; double maxRotSpeed <span style=" color: #777;">= </span>1.0; for <span style=" color: #777;">(inti= </span><span class="s1376">O; </span><span class="s1699">i </span><span class="s381">&lt; </span>n; i++)</p><p class="s360" style="padding-left: 192pt;text-indent: 0pt;line-height: 11pt;text-align: left;">r[<span style=" color: #8E8E8E;">i] </span>minBallRadius <span style=" color: #777;">+ (maxBallRadius </span><span class="s1384">*</span></p><p class="s360" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">Math<span style=" color: #3D3D3D;">.</span><span style=" color: #777;">random());</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">x<span style=" color: #8E8E8E;">[i] </span><span style=" color: #777;">W / 2;</span></p><p class="s191" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">y[i] H/2;</p><p class="s191" style="padding-left: 3pt;text-indent: 0pt;line-height: 106%;text-align: left;">int <span style=" color: #8E8E8E;">r</span><span style=" color: #646464;">ed = </span>rand<span style=" color: #505050;">.</span>nextint(256); int green= rand.nextint(256); int blue= rand.nextint(256);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s967" style="padding-left: 87pt;text-indent: 0pt;text-align: left;"><a name="bookmark106">I </a><span class="s773">2;</span></p><p class="s967" style="padding-top: 9pt;padding-left: 87pt;text-indent: 0pt;text-align: left;">I <span class="s773">2;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s99" style="padding-top: 8pt;padding-left: 86pt;text-indent: 0pt;text-align: left;">2;</p><p style="padding-top: 3pt;padding-left: 72pt;text-indent: 0pt;text-align: left;">color[i) <span class="s1272">= </span>new Co<span style=" color: #828282;">l</span>or(red, green, blue); color[i] = new Color(255,255,255);</p><p style="padding-left: 72pt;text-indent: 0pt;line-height: 11pt;text-align: left;">dx[i) <span class="s290">= </span>maxBal <span style=" color: #828282;">l </span>Speed * Math.random() - maxBallSpeed</p><p style="padding-left: 72pt;text-indent: 0pt;line-height: 24pt;text-align: left;">dy[il maxBallSpeed <span style=" color: #4F4F4F;">* </span>Math.random() - maxBallSpeed a[i] <span class="s1272">= </span><span style=" color: #4F4F4F;">2.0 </span>*Math.PI* Math.random();</p><p style="padding-left: 72pt;text-indent: 0pt;line-height: 12pt;text-align: left;">da[i] <span class="s290">= </span>maxRotSpeed * Math.random() - maxRotSpeed /</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 161pt;text-indent: -25pt;line-height: 106%;text-align: left;">protected void paintCompone<span style=" color: #828282;">n</span>t(Graphics g) { super.paintComponent(g);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 161pt;text-indent: 0pt;line-height: 106%;text-align: left;">checkBoundary()<span style=" color: #4F4F4F;">;//check </span>ball <span style=" color: #4F4F4F;">at </span>window boundary checkCol<span style=" color: #828282;">l</span>isions();//check for collisions between ba<span style=" color: #828282;">l</span>ls checkZeroVelocity(); // want ALL the balls to move. <span style=" color: #727272;">update</span><span style=" color: #4F4F4F;">XYPosi</span><span style=" color: #727272;">tions()</span><span style=" color: #4F4F4F;">;//use </span>dx, dy to get <span style=" color: #4F4F4F;">n</span><span style=" color: #727272;">ew </span><span style=" color: #4F4F4F;">x, </span>y drawBalls(g);//draw al<span style=" color: #828282;">l </span><span style=" color: #727272;">the </span>balls</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 161pt;text-indent: -25pt;line-height: 106%;text-align: left;">private void checkBoundary() { for (inti= 0; <span style=" color: #727272;">i </span><span class="s1700">&lt; </span>n;i<span style=" color: #828282;">+</span>+)</p><p style="padding-left: 186pt;text-indent: 0pt;line-height: 9pt;text-align: left;">if <span class="s1701">(</span><span class="s1702">x[i]</span>+ r<span style=" color: #828282;">[</span>i)<span class="s1703">&gt; </span>ge<span style=" color: #828282;">t</span>Width())</p><p style="padding-left: 211pt;text-indent: 0pt;line-height: 14pt;text-align: left;">dx[i] <span class="s1689">= </span>-Math.abs(dx[i]);</p><p style="padding-top: 10pt;padding-left: 186pt;text-indent: 0pt;line-height: 13pt;text-align: left;">if <span style=" color: #727272;">(</span><span style=" color: #4F4F4F;">x[i) - r</span><span style=" color: #828282;">[</span>i<span style=" color: #828282;">] </span><span class="s1660">&lt; </span>0) {</p><p style="padding-left: 211pt;text-indent: 0pt;line-height: 13pt;text-align: left;">dx[i) <span class="s1272">= </span>Math.abs(dx[i));</p><p style="padding-top: 11pt;padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: center;">if (y[i] <span class="s964">+ </span>r<span style=" color: #828282;">[</span>i) <span class="s1038">&gt; </span>getHeight())</p><p style="padding-left: 109pt;text-indent: 0pt;line-height: 13pt;text-align: center;">dy[i) <span class="s290">= </span><span style=" color: #2F2F2F;">- </span>Math.abs(dy[i));</p><p style="padding-top: 10pt;padding-left: 186pt;text-indent: 0pt;line-height: 12pt;text-align: left;">if (y[i) <span style=" color: #4F4F4F;">- </span>r<span style=" color: #828282;">[</span>il <span class="s1705">&lt; </span>0) <span style=" color: #4F4F4F;">{</span></p><p class="s773" style="padding-left: 211pt;text-indent: 0pt;line-height: 13pt;text-align: left;">dy[i] <span class="s1272">= </span>Ma<span style=" color: #727272;">th </span>.abs(dy[i <span style=" color: #727272;">))</span>;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 136pt;text-indent: 0pt;line-height: 11pt;text-align: left;">private void updateXYPositions() <span class="s1104">{</span></p><p class="s1706" style="padding-left: 109pt;text-indent: 0pt;line-height: 13pt;text-align: center;">for (int i <span class="s290">= </span>0; <span style=" color: #727272;">i </span><span style=" color: #4F4F4F;">&lt; </span>n; i++) <span class="s1709">{</span></p><p class="s647" style="padding-left: 186pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span style=" color: #4F4F4F;">x[i) x[</span>il <span style=" color: #828282;">+ </span>dx[i) <span style=" color: #4F4F4F;">;</span></p><p style="padding-left: 186pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span style=" color: #4F4F4F;">y[i) </span>y[i) + <span style=" color: #727272;">dy</span>[i];</p><p class="s1706" style="padding-left: 109pt;text-indent: 0pt;line-height: 14pt;text-align: center;">a[i] <span class="s290">= </span><span class="p">a[il </span>+ <span style=" color: #727272;">da</span>[i) <span style=" color: #4F4F4F;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 161pt;text-indent: -25pt;line-height: 79%;text-align: left;">private void drawBalls(Graphics g) for <span style=" color: #727272;">(int </span>i <span class="s290">= </span>0; <span style=" color: #727272;">i </span><span class="s1705">&lt; </span><span style=" color: #4F4F4F;">n; </span><span style=" color: #727272;">i++) </span>{</p><p style="padding-top: 1pt;padding-left: 187pt;text-indent: 0pt;text-align: left;">g.setCo<span style=" color: #828282;">l</span>or(color[i<span style=" color: #828282;">))</span>; <span style=" color: #4F4F4F;">g.drawL</span><span style=" color: #727272;">ine(</span></p><p style="padding-left: 237pt;text-indent: 0pt;text-align: left;">(int) <span style=" color: #727272;">(</span><span style=" color: #4F4F4F;">x[</span><span style=" color: #727272;">i) + </span>r[i] <span style=" color: #4F4F4F;">* </span>Math.cos(a[i) +</p><p class="s773" style="padding-left: 86pt;text-indent: 0pt;text-align: left;">Mat<span style=" color: #727272;">h.</span>PI)),</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-top: 7pt;padding-left: 88pt;text-indent: 0pt;text-align: left;"><a name="bookmark107">Math.PI)),</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1710" style="text-indent: 0pt;text-align: right;">}</p><p class="s360" style="padding-top: 3pt;padding-left: 69pt;text-indent: 0pt;text-align: left;">(int) (y[i) <span style=" color: #7B7B7B;">+ </span>r[il <span class="s1711">* </span><span style=" color: #4D4D4D;">Math.sin(a[i] </span><span class="s373">+</span></p><p class="s360" style="padding-top: 8pt;padding-left: 69pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span style=" color: #7B7B7B;">(int) </span><span class="s495">(x </span><span class="s377">[ </span>i] + r[i<span style=" color: #8C8C8C;">] </span><span class="s1712">* </span>Math.cos(a[i])),</p><p class="s360" style="padding-left: 69pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span style=" color: #7B7B7B;">(int) </span>(y<span style=" color: #7B7B7B;">[</span>i] + r[i] <span class="s1711">* </span>Math.sin(a[i])));</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-top: 5pt;padding-left: 165pt;text-indent: -25pt;line-height: 106%;text-align: left;">private void checkCollisions() <span style=" color: #7B7B7B;">{ </span>double[] unit= new double[2]; double length= 0.0;</p><p class="s360" style="padding-left: 165pt;text-indent: 0pt;line-height: 106%;text-align: justify;">double iLength = 0.0; double <span style=" color: #7B7B7B;">jLength = </span>0.0; double temp= 0.0;</p><p class="s360" style="padding-left: 165pt;text-indent: 0pt;line-height: 9pt;text-align: justify;">for (int i = <span class="s368">0; </span>i &lt; n; i++) {</p><p class="s360" style="padding-left: 60pt;text-indent: 0pt;line-height: 14pt;text-align: center;">for (int <span style=" color: #4D4D4D;">j </span><span class="s369">= </span><span style=" color: #7B7B7B;">i + </span><span class="s1154">1;    </span>j &lt; <span style=" color: #4D4D4D;">n; </span>j++) {</p><p class="s1152" style="padding-left: 216pt;text-indent: 0pt;text-align: left;">//check <span style=" color: #646464;">to see if ball i has collided with ball</span></p><p class="s186" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">j <span style=" color: #333;">:</span></p><p class="s360" style="padding-left: 216pt;text-indent: 0pt;text-align: left;">double dist= Math.sqrt(</p><p class="s360" style="padding-left: 267pt;text-indent: 0pt;line-height: 11pt;text-align: left;">Math.pow(x[j<span style=" color: #8C8C8C;">] </span>- <span class="s1714">x[i], </span>2)</p><p class="s360" style="padding-left: 267pt;text-indent: 0pt;line-height: 12pt;text-align: left;">+ Math.pow(y<span style=" color: #8C8C8C;">[j</span>] - <span class="s1715">y [ i </span><span class="s1716">] </span><span class="s1717">, </span><span class="s1718">2));</span></p><p class="s360" style="padding-top: 1pt;padding-left: 242pt;text-indent: -26pt;line-height: 88%;text-align: left;">if(dist&gt; <span class="s1388">0 </span>&amp;&amp; dist&lt;= r<span style=" color: #8C8C8C;">[</span>i] <span style=" color: #7B7B7B;">+ </span>r[j]) unit[O] <span class="s61">= </span>(x[j] - <span class="s1714">x[</span><span class="s1719">i]) </span><span class="s179">/ </span>dist;</p><p class="s360" style="padding-left: 242pt;text-indent: 0pt;line-height: 106%;text-align: left;">unit[l<span style=" color: #8C8C8C;">] </span><span style=" color: #4D4D4D;">= </span>(y[j] - y[<span style=" color: #8C8C8C;">i]</span>) / dist; <span style=" color: #7B7B7B;">length= </span><span style=" color: #4D4D4D;">Math.sq</span><span style=" color: #7B7B7B;">t</span><span style=" color: #4D4D4D;">r</span><span style=" color: #7B7B7B;">(</span></p><p class="s360" style="padding-left: 293pt;text-indent: 0pt;text-align: left;">Math.pow(unit[O], 2)</p><p class="s360" style="padding-left: 293pt;text-indent: 0pt;text-align: left;">+ Math.pow(unit[l], <span style=" color: #4D4D4D;">2)</span><span style=" color: #7B7B7B;">);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-top: 5pt;padding-left: 242pt;text-indent: 0pt;text-align: left;">iLength</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 242pt;text-indent: 0pt;text-align: left;">jLength</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 242pt;text-indent: 0pt;text-align: left;">dx[<span class="s1096">i]</span></p><p class="s360" style="padding-top: 1pt;padding-left: 242pt;text-indent: 0pt;text-align: left;">dy[i]</p><p class="s1152" style="padding-top: 5pt;padding-left: 3pt;text-indent: 12pt;line-height: 106%;text-align: left;"><span style=" color: #646464;">Math.sqrt( </span>Math.pow<span style=" color: #7B7B7B;">(dx[i]</span>, <span style=" color: #646464;">2)</span></p><p class="s1152" style="padding-left: 3pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><span style=" color: #646464;">+ </span><span style=" color: #7B7B7B;">Ma</span>th.pow(dy[i<span style=" color: #8C8C8C;">]</span>, <span style=" color: #646464;">2));</span></p><p class="s1152" style="padding-left: 3pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s61">= </span><span style=" color: #646464;">Math.sqrt( </span>Math.pow<span style=" color: #7B7B7B;">(dx[j</span>], <span style=" color: #646464;">2)</span></p><p class="s331" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">+ <span style=" color: #646464;">Math.pow(dy[j</span>]<span style=" color: #4D4D4D;">, </span><span style=" color: #646464;">2));</span></p><p class="s360" style="padding-top: 9pt;padding-left: 3pt;text-indent: 0pt;line-height: 13pt;text-align: left;">-jLength <span class="s1711">* </span>unit[O];</p><p class="s360" style="padding-left: 3pt;text-indent: 0pt;line-height: 13pt;text-align: left;">-jLength <span class="s376">* </span><span style=" color: #7B7B7B;">unit[l];</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1720" style="padding-left: 243pt;text-indent: 0pt;text-align: left;">dx <span class="s186">[j </span><span class="s1154">J</span></p><p class="s360" style="padding-top: 1pt;padding-left: 242pt;text-indent: 0pt;text-align: left;">dy[j]</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 243pt;text-indent: 0pt;line-height: 106%;text-align: left;">temp a[i]</p><p class="s360" style="padding-left: 243pt;text-indent: 0pt;text-align: left;">a[j]</p><p class="s369" style="padding-top: 8pt;padding-left: 3pt;text-indent: 0pt;line-height: 13pt;text-align: left;">= <span class="s360">iLength </span><span class="s1384">* </span><span class="s533">unit[OJ </span><span class="s1152">;</span></p><p class="s360" style="padding-left: 3pt;text-indent: 0pt;line-height: 14pt;text-align: left;">= iLength <span class="s1721">* </span>unit[l];</p><p class="s1388" style="padding-top: 10pt;padding-left: 10pt;text-indent: 0pt;line-height: 12pt;text-align: left;">a [ <span class="s186">i </span><span class="s1722">l </span><span class="s1723">;</span></p><p class="s1724" style="padding-left: 10pt;text-indent: 0pt;line-height: 13pt;text-align: left;">a [ <span class="s1154">j </span><span class="s361">l ;</span></p><p class="s360" style="padding-top: 1pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">temp;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1039" style="padding-top: 4pt;padding-left: 193pt;text-indent: 0pt;text-align: left;">}.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-top: 6pt;padding-left: 166pt;text-indent: -25pt;line-height: 106%;text-align: left;">private void checkZeroVelocity() { for <span style=" color: #7B7B7B;">(int </span>i = O; i &lt; n; i<span style=" color: #8C8C8C;">+</span>+) {</p><p class="s360" style="padding-left: 192pt;text-indent: 0pt;line-height: 11pt;text-align: left;">if <span style=" color: #7B7B7B;">((dx[il </span><span class="s1711">* </span><span class="s1720">dx[i] </span>+ dy[il <span class="s1711">* </span><span style=" color: #7B7B7B;">dy[i]) </span>&lt;= 0.1)</p><p class="s360" style="padding-left: 217pt;text-indent: 0pt;line-height: 10pt;text-align: left;">System.out.println(&quot;zero vel at&quot;+ <span style=" color: #8C8C8C;">i</span>);</p><p class="s360" style="padding-left: 218pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s1095">dx[i</span><span class="s1725">] </span>= 1 <span style=" color: #7B7B7B;">+ </span><span class="s1719">(4 </span><span class="s1384">* </span>Math.ra<span style=" color: #8C8C8C;">n</span>dom(<span style=" color: #8C8C8C;">) </span>- 2);</p><p class="s360" style="padding-left: 217pt;text-indent: 0pt;line-height: 13pt;text-align: left;">dy[i] = 1 <span style=" color: #4D4D4D;">+ </span>(4 <span class="s1711">* </span>Math.random() - 2);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s772" style="padding-top: 5pt;padding-left: 161pt;text-indent: -25pt;line-height: 106%;text-align: left;"><a name="bookmark108">c</a><span style=" color: #424242;">l</span>ass TimerListener <span style=" color: #838383;">i</span>mp<span style=" color: #838383;">l</span>ements <span style=" color: #707070;">ActionListener </span><span style=" color: #838383;">{ </span>public void act<span style=" color: #838383;">i</span>onPerformed(ActionEvent e) <span style=" color: #707070;">{</span></p><p class="s772" style="padding-left: 186pt;text-indent: 0pt;text-align: left;">repaint();</p><p class="s1727" style="padding-top: 3pt;padding-left: 90pt;text-indent: 0pt;text-align: left;"><a name="bookmark109">Java Project: </a><span class="s1728">RotatingPolygon</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1730" style="padding-left: 90pt;text-indent: 0pt;line-height: 112%;text-align: left;"><span class="s1729">Description: </span>Draw <span style=" color: #545454;">randomly </span>placed polygons, and have them rotate in place<span style=" color: #646464;">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1729" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">Sample Output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 164pt;text-indent: 0pt;text-align: left;"><span><img width="340" height="338" alt="image" src="Image_082.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">pac<span style=" color: #3D3D3D;">k</span>age rotatingpolygon <span style=" color: #3D3D3D;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s191" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span style=" color: #898989;">impo </span><span style=" color: #646464;">rt </span>j<span style=" color: #545454;">a</span>va <span style=" color: #3D3D3D;">.</span><span style=" color: #646464;">awt </span><span style=" color: #3D3D3D;">.</span><span style=" color: #646464;">Color </span><span style=" color: #3D3D3D;">; </span>import j<span style=" color: #545454;">ava.aw</span>t.Font; <span style=" color: #646464;">import </span>java<span style=" color: #3D3D3D;">.</span><span style=" color: #646464;">awt</span><span style=" color: #3D3D3D;">.</span>Gra<span style=" color: #545454;">phics;</span></p><p class="s360" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">import <span style=" color: #777;">java</span><span style=" color: #545454;">.aw</span><span style=" color: #777;">t</span><span style=" color: #3D3D3D;">.</span>event<span style=" color: #3D3D3D;">.</span>ActionEvent<span style=" color: #3D3D3D;">; </span>import <span style=" color: #777;">java</span><span style=" color: #3D3D3D;">.a</span>wt<span style=" color: #3D3D3D;">.</span>event<span style=" color: #3D3D3D;">.</span>ActionListener<span style=" color: #3D3D3D;">; </span><span style=" color: #777;">import </span>javax<span style=" color: #3D3D3D;">.</span>swing.JFrame;</p><p class="s360" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">import java<span style=" color: #3D3D3D;">x.</span>swing.JPanel<span style=" color: #3D3D3D;">; </span>import javax.swi<span style=" color: #3D3D3D;">n</span>g<span style=" color: #3D3D3D;">.</span>Timer<span style=" color: #3D3D3D;">;</span></p><p class="s360" style="padding-left: 117pt;text-indent: -25pt;line-height: 24pt;text-align: left;">public <span style=" color: #777;">c</span><span style=" color: #545454;">l</span><span style=" color: #777;">ass RotatingPolygon </span>extends <span style=" color: #898989;">JFram</span>e <span style=" color: #898989;">( </span><span style=" color: #777;">pub</span><span style=" color: #545454;">l</span><span style=" color: #777;">ic </span>s<span style=" color: #898989;">ta</span>tic int W <span class="s369">= </span>600;</p><p class="s191" style="padding-left: 117pt;text-indent: 0pt;line-height: 10pt;text-align: left;">public static <span style=" color: #545454;">int H </span><span class="s371">= </span><span style=" color: #646464;">600;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-top: 5pt;padding-left: 142pt;text-indent: -25pt;text-align: left;"><span style=" color: #777;">public </span>Rotat<span style=" color: #898989;">ing</span>Polygon(<span style=" color: #898989;">) { </span>DrawingPanel <span style=" color: #545454;">dr</span><span style=" color: #777;">awingPanel </span>this.add(draw<span style=" color: #898989;">i</span>ngPa<span style=" color: #898989;">ne</span>l);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">new <span style=" color: #777;">DrawingPanel()</span><span style=" color: #545454;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-top: 5pt;padding-left: 112pt;text-indent: 0pt;text-align: left;"><a name="bookmark110">static class Draw</a><span style=" color: #808080;">i</span>ngPanel extends <span style=" color: #6E6E6E;">JPanel </span>{</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-left: 137pt;text-indent: 0pt;line-height: 106%;text-align: left;">priva<span style=" color: #808080;">t</span>e <span style=" color: #6E6E6E;">Timer </span>timer= <span style=" color: #6E6E6E;">new </span>Timer(30, new <span style=" color: #6E6E6E;">TimerListener())</span><span style=" color: #464646;">; </span>int m = 20; //points <span style=" color: #6E6E6E;">per </span>poly</p><p class="s1002" style="padding-left: 137pt;text-indent: 0pt;line-height: 11pt;text-align: left;">int <span style=" color: #6E6E6E;">n </span>= <span style=" color: #464646;">100; </span><span class="s1732">II </span>number <span style=" color: #6E6E6E;">of polys</span></p><p class="s472" style="padding-left: 137pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span style=" color: #5D5D5D;">double[</span><span style=" color: #909090;">)</span>[] <span style=" color: #464646;">x </span><span class="s836">= </span>new doub<span style=" color: #464646;">l</span>e[n]<span style=" color: #909090;">[</span><span style=" color: #5D5D5D;">m</span><span style=" color: #808080;">)</span><span style=" color: #5D5D5D;">;</span></p><p class="s1002" style="padding-top: 1pt;padding-left: 137pt;text-indent: 0pt;line-height: 76%;text-align: left;">do<span style=" color: #808080;">u</span>ble[<span style=" color: #808080;">)</span>[] y <span class="s1102">= </span><span style=" color: #6E6E6E;">new </span>double[n]<span style=" color: #808080;">[</span>m<span style=" color: #808080;">)</span>; double maxRadius <span class="s1733">= </span>40;</p><p class="s1002" style="padding-left: 137pt;text-indent: 0pt;line-height: 13pt;text-align: left;">double minRadius <span class="s1733">= </span>5;</p><p class="s1002" style="padding-left: 136pt;text-indent: 0pt;line-height: 106%;text-align: left;">double <span style=" color: #808080;">[) </span>xCenter = <span style=" color: #6E6E6E;">new double[n]</span><span style=" color: #464646;">; </span>double<span style=" color: #808080;">[] </span>yCenter <span style=" color: #6E6E6E;">= new double[n]</span><span style=" color: #464646;">; </span>pub<span style=" color: #808080;">l</span>ic Co<span style=" color: #808080;">l</span>or[) color= new Color<span style=" color: #808080;">[</span>n];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-left: 161pt;text-indent: -24pt;line-height: 106%;text-align: left;">public DrawingPanel() { <span style=" color: #808080;">i</span>n<span style=" color: #808080;">i</span>t<span style=" color: #808080;">i</span>alizePolygons(); timer.start();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-left: 161pt;text-indent: -24pt;text-align: left;">pr<span style=" color: #808080;">i</span>vate void initializePolygons(){ double theta;</p><p class="s1002" style="padding-top: 1pt;padding-left: 186pt;text-indent: -24pt;line-height: 82%;text-align: left;"><span style=" color: #6E6E6E;">for </span>(inti= O;<i>i </i>&lt; n; i++) { color[i) <span class="s1512">= </span>randomColor(); xCenter[i) <span class="s1115">= </span>Math.random() * W; yCenter[i) <span class="s1512">= </span>Math.random() * H; <span style=" color: #6E6E6E;">for </span>(int <span class="s1735">k </span><span class="s1512">= </span><span style=" color: #6E6E6E;">0</span><span style=" color: #464646;">; </span><span class="s1735">k </span>&lt; m; <span class="s1735">k++) </span><span class="s481">{</span></p><p class="s1002" style="padding-top: 1pt;padding-left: 212pt;text-indent: 0pt;text-align: left;">theta= k <span style=" color: #464646;">* </span>2.0 *Math.PI/ m;</p><p class="s472" style="padding-left: 212pt;text-indent: 0pt;text-align: left;">doubler= minRadius <span style=" color: #5D5D5D;">+ </span>(maxRadius <span style=" color: #464646;">- </span><span style=" color: #5D5D5D;">minRadius) *</span></p><p class="s1002" style="padding-left: 86pt;text-indent: 0pt;text-align: left;">Math.random();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-left: 34pt;text-indent: 0pt;text-align: left;">//use this line if you want regular polygons:</p><p class="s1002" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">//doubler= maxRadius;   <b>x[i] </b><span class="s1735">[kl    </span><span style=" color: #6E6E6E;">= </span>r * Math.cos(theta) <span class="s990">y[i]</span>(kl = <span class="s1737">r </span><span style=" color: #464646;">* </span>Math.sin(theta)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-top: 5pt;padding-left: 161pt;text-indent: -24pt;text-align: left;"><span style=" color: #6E6E6E;">protected </span>void paintComponent(Graphics g) <span style=" color: #464646;">{ </span>super.paintComponent(g); updatePositions();</p><p class="s1002" style="padding-left: 161pt;text-indent: 0pt;text-align: left;">drawPolygons(g);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-left: 162pt;text-indent: -25pt;line-height: 106%;text-align: left;">pr<span style=" color: #808080;">i</span>vate void updatePositions() double <span style=" color: #6E6E6E;">alpha= 0</span><span style=" color: #464646;">.1;</span></p><p class="s1002" style="padding-left: 162pt;text-indent: 0pt;line-height: 11pt;text-align: left;">for(int <i>i </i><span class="s1733">= </span><span style=" color: #6E6E6E;">0 </span><span style=" color: #464646;">; </span><span class="s1738">i </span><span class="s989">&lt; </span>n; i<span style=" color: #808080;">+</span>+)</p><p class="s1002" style="padding-left: 187pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span style=" color: #6E6E6E;">for(int </span>k <span class="s838">= </span>0; k <span class="s989">&lt; </span><span style=" color: #6E6E6E;">m; </span>k+<span style=" color: #808080;">+</span>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="padding-top: 5pt;padding-left: 86pt;text-indent: 125pt;line-height: 106%;text-align: left;">doub<span style=" color: #808080;">l</span>e newX (y[i<span style=" color: #909090;">]</span><span style=" color: #464646;">[kl) </span>* Ma<span style=" color: #808080;">t</span>h.sin(alpha);</p><p class="s1002" style="padding-left: 86pt;text-indent: 125pt;line-height: 106%;text-align: left;">double newY <span style=" color: #6E6E6E;">(y[i]</span><span style=" color: #464646;">[k)) </span>* Ma<span style=" color: #808080;">t</span>h.cos(alpha);</p><p class="s1002" style="padding-top: 5pt;text-indent: 0pt;text-align: right;"><span style=" color: #6E6E6E;">(x[i][k]) </span>* Math.cos(a<span style=" color: #808080;">l</span>pha) <span style=" color: #6E6E6E;">+</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1002" style="text-indent: 0pt;text-align: right;">-(x[il [kl) * Math.sin<span style=" color: #808080;">(</span>a<span style=" color: #808080;">l</span>pha) +</p><p class="s618" style="padding-top: 4pt;padding-left: 216pt;text-indent: 0pt;line-height: 93%;text-align: center;"><a name="bookmark111">x[i][k) </a><span class="s1739">= </span>newX y<span style=" color: #565656;">[i</span><span style=" color: #8C8C8C;">] </span><span class="s45">[ k </span><span class="s1740">l </span>= <span style=" color: #7B7B7B;">new</span><span style=" color: #565656;">Y</span></p><p class="s625" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">}</p><p class="s618" style="padding-left: 178pt;text-indent: 0pt;line-height: 12pt;text-align: left;">//xCenter<span style=" color: #8C8C8C;">[</span>i] <span style=" color: #7B7B7B;">+= </span><span class="s1741">1. </span><span class="s88">0 ;</span></p><p class="s618" style="padding-left: 179pt;text-indent: 0pt;line-height: 12pt;text-align: left;">//yCenter<span style=" color: #8C8C8C;">[i</span>] <span style=" color: #7B7B7B;">+= </span><span class="s1742">1.0;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-top: 8pt;padding-left: 166pt;text-indent: -25pt;line-height: 24pt;text-align: left;">class TimerListener <span style=" color: #7B7B7B;">implements </span>ActionListener { public void act<span style=" color: #8C8C8C;">i</span>onPerformed(ActionEvent <span style=" color: #7B7B7B;">e) </span>{</p><p class="s618" style="padding-left: 192pt;text-indent: 0pt;text-align: left;">repaint();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-left: 166pt;text-indent: -25pt;text-align: left;">private void drawPolygons(Graphics g) { for (int i = <span class="s45">O; </span>i <span class="s53">&lt; </span>n; i++) {</p><p class="s618" style="padding-left: 192pt;text-indent: 0pt;line-height: 106%;text-align: left;">int[] <span style=" color: #7B7B7B;">poly</span><span style=" color: #565656;">X </span>= new int[m]; int[] polyY = new int[m];</p><p class="s618" style="padding-left: 191pt;text-indent: 0pt;line-height: 106%;text-align: left;">//Color color= <span style=" color: #7B7B7B;">randomColor</span><span style=" color: #565656;">;</span><span style=" color: #7B7B7B;">() </span>g.setColor(color<span style=" color: #8C8C8C;">]</span>[<span style=" color: #8C8C8C;">)</span>;i</p><p class="s533" style="padding-left: 191pt;text-indent: 0pt;line-height: 11pt;text-align: left;">for(int <span class="s1743">k </span>= <span style=" color: #676767;">0; k </span><span class="s1204">&lt; </span><span style=" color: #676767;">m; </span><span class="s1744">k++) </span><span class="s1745">{</span></p><p class="s618" style="padding-left: 211pt;text-indent: 0pt;line-height: 11pt;text-align: left;">po<span style=" color: #8C8C8C;">l</span>yX[k<span style=" color: #8C8C8C;">] </span><span style=" color: #7B7B7B;">(int) </span><span class="s1556">(x </span><span class="s1716">[ i </span><span class="s1746">] </span><span class="s1744">[ k </span><span class="s1747">l </span>+ xCenter[i <span style=" color: #8C8C8C;">]</span>);</p><p class="s618" style="padding-left: 211pt;text-indent: 0pt;line-height: 13pt;text-align: left;">polyY[k <span style=" color: #8C8C8C;">] </span><span class="s61">= </span><span style=" color: #7B7B7B;">(int)</span>(y<span style=" color: #8C8C8C;">[i</span><span style=" color: #565656;">] </span><span class="s1748">[ k </span><span class="s1749">] </span>+ ycenter[i<span style=" color: #8C8C8C;">]</span>)<span style=" color: #464646;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-left: 191pt;text-indent: 0pt;text-align: left;">g<span style=" color: #464646;">.</span>fillPolygon(polyX, polyY, m); g<span style=" color: #464646;">.</span>setColor(Color<span style=" color: #464646;">.</span>black); g.drawPolygon(polyX, polyY, m)<span style=" color: #464646;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-left: 166pt;text-indent: -25pt;line-height: 106%;text-align: left;">private Color randomColor() <span style=" color: #565656;">{ </span>Color color= new <span style=" color: #7B7B7B;">Color(</span></p><p class="s533" style="padding-left: 217pt;text-indent: 0pt;line-height: 10pt;text-align: left;">(int) <span style=" color: #676767;">(256 </span><span class="s1750">* </span><span style=" color: #565656;">Mat</span>h<span style=" color: #464646;">.</span><span style=" color: #676767;">random()),</span></p><p class="s618" style="padding-left: 217pt;text-indent: 0pt;line-height: 82%;text-align: left;"><span style=" color: #7B7B7B;">(int) </span>(256 <span class="s63">* </span>Math.random())<span style=" color: #464646;">, </span><span style=" color: #7B7B7B;">(int) </span>(256 <span class="s1751">* </span>Math.random())</p><p class="s1752" style="padding-left: 167pt;text-indent: 0pt;text-align: left;">) <span class="s1200">;</span></p><p class="s533" style="padding-top: 2pt;padding-left: 166pt;text-indent: 0pt;text-align: left;">return <span style=" color: #565656;">co</span>lor<span style=" color: #565656;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-left: 141pt;text-indent: -25pt;line-height: 106%;text-align: left;">public static void <span style=" color: #7B7B7B;">main(String[</span><span style=" color: #565656;">] </span>args) <span style=" color: #8C8C8C;">{ </span>RotatingPolygon frame= new <span style=" color: #565656;">Rotat</span><span style=" color: #7B7B7B;">ingPolygon(); </span>frame<span style=" color: #464646;">.</span>setTitle(&quot;Drawings&quot;);</p><p class="s618" style="padding-left: 141pt;text-indent: 0pt;line-height: 110%;text-align: left;">frame<span style=" color: #A0A0A0;">.</span>setDefaultCloseOperation(JFrame.EXIT_ON<span style=" color: #8C8C8C;">_</span>CLOSE); frame<span style=" color: #464646;">.</span>setSize(W, H);</p><p class="s618" style="padding-left: 141pt;text-indent: 0pt;line-height: 11pt;text-align: left;">frame.setVisible(true);</p><p class="s466" style="padding-top: 3pt;padding-left: 90pt;text-indent: 0pt;text-align: justify;"><a name="bookmark112">Java Project: </a><span class="s1754">Life</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s469" style="padding-left: 89pt;text-indent: 0pt;text-align: justify;"><span class="s1755">Description: </span>This program simulates Conway&#39;s Game of Life. Using relatively simple rules, the cells change between black and white giving the impression of motion and other life-like activity. Various patterns emerge - very thought provoking. The program has a few settings that <span style=" color: #484848;">can </span>be played with to get different effects, in particular a slide bar that allows for the density of white vs. black at the start of the simulation and <span style=" color: #484848;">&quot;init&quot; </span>and &quot;stop/start&quot; buttons to restart or pause the simulation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="580" height="364" alt="image" src="Image_083.jpg"/></span></p><p class="s1757" style="text-indent: 0pt;line-height: 28pt;text-align: left;">•</p><p style="text-indent: 0pt;text-align: left;"/><p class="s1758" style="text-indent: 0pt;line-height: 9pt;text-align: left;">Conway<span style=" color: #9C9C9C;">&#39;</span><span style=" color: #828282;">sGame of Life</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part29.htm">&lt; Previous</a><span> | </span><a href="../index.html">Contents</a><span> | </span><a href="part31.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
