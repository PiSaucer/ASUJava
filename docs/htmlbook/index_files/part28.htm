<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Sample Output:</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part27.htm">&lt; Previous</a><span> | </span><a href="../index.html">Contents</a><span> | </span><a href="part29.htm">Next &gt;</a></p><p class="s1590" style="padding-left: 89pt;text-indent: 0pt;text-align: justify;">Sample Output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="182" height="26" alt="image" src="Image_072.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="148" alt="image" src="Image_073.png"/></span></p><p class="s1591" style="text-indent: 0pt;line-height: 16pt;text-align: left;">1</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="1" height="217" alt="image" src="Image_074.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="1" height="232" alt="image" src="Image_075.png"/></span></p><p class="s1592" style="padding-left: 109pt;text-indent: 0pt;text-align: center;">An<span style=" color: #9E9E9E;">i</span><span style=" color: #7C7C7C;">mated </span>Clock</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="44" height="42" alt="image" src="Image_076.jpg"/></span></p><p class="s1215" style="padding-left: 22pt;text-indent: 0pt;text-align: center;"><span><img width="1" height="56" alt="image" src="Image_077.png"/></span> <span class="s1595">9</span></p><p class="s1596" style="padding-top: 34pt;text-indent: 0pt;text-align: center;"> &nbsp;&nbsp; &nbsp;6 &nbsp;&nbsp; &nbsp;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1502" style="padding-left: 89pt;text-indent: 0pt;text-align: justify;">There are two java files: ClockAnimation.java and StillClock.java. The program could use some embellishments, such as a better drawing of the clock and better/more numbers etc.</p><p class="s222" style="padding-top: 12pt;padding-left: 90pt;text-indent: 0pt;text-align: left;">package clockanimation;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 89pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span style=" color: #525252;">import </span>java.awt.event.ActionEvent; <span style=" color: #3D3D3D;">imp</span>ort <span style=" color: #525252;">java.awt.event.ActionListener; </span>import java<span style=" color: #3D3D3D;">x.swing.JFra</span>me;</p><p class="s1147" style="padding-left: 89pt;text-indent: 0pt;text-align: left;"><span style=" color: #525252;">import </span>java<span style=" color: #3D3D3D;">x.sw</span>ing.Timer<span style=" color: #3D3D3D;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 115pt;text-indent: -25pt;line-height: 208%;text-align: left;">public class ClockAnimation extends JFrame { <span style=" color: #7C7C7C;">private </span>StillClock clock= new StillClock();</p><p class="s1147" style="padding-left: 140pt;text-indent: -25pt;line-height: 106%;text-align: left;">public ClockAnimation() { this.add(clock);</p><p class="s1003" style="padding-left: 141pt;text-indent: 0pt;line-height: 110%;text-align: left;">Timer time<span style=" color: #525252;">r = </span>new Timer(lOOO<span style=" color: #525252;">, </span><span style=" color: #696969;">new </span>TimerListener()); <span style=" color: #696969;">timer.start();</span></p><p class="s848" style="padding-top: 4pt;padding-left: 136pt;text-indent: -24pt;text-align: justify;"><a name="bookmark91">public static void main(String[] args) { </a><span style=" color: #727272;">JFrame </span>frame= new ClockAnimation(); frame.setTitle(&quot;Animated Clock&quot;);</p><p class="s848" style="padding-left: 136pt;text-indent: 0pt;line-height: 11pt;text-align: left;">frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</p><p class="s1598" style="padding-left: 136pt;text-indent: 0pt;text-align: left;"><span style=" color: #5E5E5E;">//frame.setLocationRelat</span><span style=" color: #8A8A8A;">i</span>ve<span style=" color: #727272;">To(null); frame</span>.setS<span style=" color: #727272;">ize(200</span>, <span style=" color: #5E5E5E;">200); frame.setVisible(true);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s957" style="padding-left: 136pt;text-indent: -24pt;line-height: 24pt;text-align: left;">p<span style=" color: #484848;">ublic </span><span style=" color: #5E5E5E;">class </span>TimerListener <span style=" color: #5E5E5E;">implements ActionListener public void actionPerformed(ActionEvent e) {</span></p><p class="s848" style="padding-left: 161pt;text-indent: 0pt;text-align: left;">clock.setCurrentTime(); clock.repaint();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1599" style="padding-top: 6pt;padding-left: 86pt;text-indent: 0pt;line-height: 12pt;text-align: left;">II/II/////II/I/I///III/I///III/II/II//I//III/I/I///I//</p><p class="s848" style="padding-left: 86pt;text-indent: 0pt;line-height: 12pt;text-align: left;">package clockani mat<span style=" color: #8A8A8A;">i</span>on;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s848" style="padding-left: 86pt;text-indent: 0pt;text-align: left;">import <span style=" color: #727272;">java.awt</span><span style=" color: #484848;">.Co</span><span style=" color: #727272;">lor; </span>import java.awt.Dimension; import java.awt.Graphics; import java.util.Ca<span style=" color: #8A8A8A;">l</span>endar;</p><p class="s957" style="padding-left: 86pt;text-indent: 0pt;line-height: 93%;text-align: left;"><span style=" color: #5E5E5E;">import </span>ja<span style=" color: #484848;">v</span>a.util.GregorianCalendar; <span style=" color: #5E5E5E;">import </span>javax<span style=" color: #484848;">.swing.</span><span style=" color: #8A8A8A;">J</span><span style=" color: #5E5E5E;">Panel;</span></p><p class="s848" style="padding-left: 111pt;text-indent: -25pt;line-height: 24pt;text-align: left;">public class Sti<span style=" color: #8A8A8A;">ll</span>C<span style=" color: #8A8A8A;">l</span><span style=" color: #727272;">ock </span>extends JPanel { private <span style=" color: #727272;">in</span><span style=" color: #484848;">t </span>hour;</p><p class="s957" style="padding-left: 111pt;text-indent: 0pt;line-height: 93%;text-align: left;">private <span style=" color: #484848;">int </span>minute; <span style=" color: #5E5E5E;">private int second;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s848" style="padding-left: 136pt;text-indent: -24pt;text-align: left;">public StillC<span style=" color: #8A8A8A;">l</span>ock() setCurrentTime();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s957" style="padding-top: 9pt;padding-left: 136pt;text-indent: -24pt;text-align: left;">p<span style=" color: #484848;">ub</span><span style=" color: #8A8A8A;">l</span>ic <span style=" color: #5E5E5E;">StillClock(int hour, </span>int <span style=" color: #5E5E5E;">minute, </span>int <span style=" color: #5E5E5E;">second) { </span>this.hour= <span style=" color: #5E5E5E;">hour;</span></p><p class="s848" style="padding-left: 136pt;text-indent: 0pt;line-height: 93%;text-align: left;">this.minute minute; this.second= second;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s848" style="padding-left: 136pt;text-indent: -24pt;line-height: 93%;text-align: left;">public int getHour() <span style=" color: #727272;">return </span>hour;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s957" style="padding-left: 136pt;text-indent: -24pt;line-height: 93%;text-align: left;"><span style=" color: #5E5E5E;">public </span>int getMinute() <span style=" color: #5E5E5E;">return </span>mi<span style=" color: #484848;">nut</span>e;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s848" style="padding-top: 10pt;padding-left: 136pt;text-indent: -24pt;text-align: left;">public int getSecond() return second;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s301" style="padding-top: 5pt;padding-left: 139pt;text-indent: -25pt;line-height: 106%;text-align: left;"><a name="bookmark92"><span style=" color: #6B6B6B;">public void setHour(int hour) </span></a>{ <span style=" color: #808080;">this</span>.hour = <span style=" color: #6B6B6B;">hour;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 139pt;text-indent: -25pt;text-align: left;">public <span style=" color: #595959;">void </span>setMinute(int minute) <span style=" color: #595959;">{ </span>this.minute= minute;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 140pt;text-indent: -25pt;line-height: 106%;text-align: left;">public void setSecond(int second) { this.second= second;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 139pt;text-indent: -25pt;line-height: 106%;text-align: left;">protected void paintComponent(Graphics g) { super.paintComponent(g);</p><p class="s299" style="padding-top: 8pt;padding-left: 140pt;text-indent: 0pt;line-height: 14pt;text-align: left;">int clockRadius = (int) (Math.rnin(getWidth(), getHeight()) <span class="s817">*</span></p><p class="s299" style="padding-left: 88pt;text-indent: 0pt;line-height: 14pt;text-align: left;">0.8 <span class="s1130">* </span>0<span style=" color: #343434;">.</span>5);</p><p class="s299" style="padding-left: 140pt;text-indent: 0pt;line-height: 106%;text-align: left;">int <span style=" color: #595959;">xC</span><span style=" color: #808080;">enter </span>= getWidth() <span style=" color: #595959;">/ </span>2; int yCenter <span style=" color: #595959;">= </span>getHeight() / 2;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 140pt;text-indent: 0pt;text-align: left;">g.setColor(Color.black);</p><p class="s299" style="padding-left: 140pt;text-indent: 0pt;line-height: 10pt;text-align: left;">g.drawOval(xCenter - clockRadius, yCenter - clockRadius,</p><p class="s299" style="padding-left: 140pt;text-indent: 50pt;line-height: 92%;text-align: left;">2 <span class="s1130">* </span>clockRadius, 2 <span class="s1130">* </span>clockRadius); g<span style=" color: #464646;">.</span>drawstring(&quot;l2&#39;&#39;,xCenter - 5, yCenter - clockRadius <span class="s1600">+ </span>12); g.drawString(&quot;9&#39;&#39;, <span style=" color: #595959;">xCenter - </span>clockRadius <span class="s481">+ </span>3, yCenter <span class="s310">+ </span><span style=" color: #808080;">5); </span>g<span style=" color: #464646;">.</span>drawString(&quot;3&#39;&#39;,<span style=" color: #595959;">xCenter </span><span class="s1601">+ </span><span style=" color: #808080;">c</span><span style=" color: #595959;">l</span><span style=" color: #808080;">ockRadius </span>- <span style=" color: #595959;">10, </span>yCenter <span class="s1602">+ </span>3); g<span style=" color: #464646;">.dr</span>awString(&quot;6&#39;&#39;,<span style=" color: #595959;">xCenter </span><span style=" color: #808080;">- </span>3, ycenter <span class="s1603">+ </span>clockRadius <span style=" color: #595959;">- </span>3);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 140pt;text-indent: 0pt;text-align: left;">//Draw second hand<span style=" color: #464646;">:</span></p><p class="s299" style="padding-left: 89pt;text-indent: 50pt;line-height: 110%;text-align: left;">//Note: it may appear <span style=" color: #808080;">that </span>the sin and cos should be reversed,</p><p class="s299" style="padding-left: 140pt;text-indent: 0pt;line-height: 10pt;text-align: left;">//but careful analysis shows we are dealing with cos(pi/2 -</p><p class="s299" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">theta)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 10pt;text-indent: 0pt;text-align: left;">//which <span class="s1604">is </span><span style=" color: #808080;">equal </span>to sin(theta),</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">so <span style=" color: #595959;">the </span>sin and cos get</p><p class="s299" style="padding-top: 1pt;padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: center;">exchanged.</p><p class="s299" style="padding-left: 175pt;text-indent: 0pt;line-height: 106%;text-align: center;">int sLength = (int) int xSecond = (int)</p><p class="s301" style="padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: center;">*Math.PI/ <span style=" color: #6B6B6B;">60));</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">(clockRadius <span style=" color: #595959;">* </span>0.8);</p><p class="s299" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">(xCenter <span class="s1094">+ </span>sLength <span style=" color: #595959;">* </span>Math.sin(second * 2</p><p class="s299" style="padding-top: 1pt;padding-left: 141pt;text-indent: 0pt;text-align: left;">int <span style=" color: #595959;">ySecond</span></p><p class="s299" style="padding-left: 89pt;text-indent: 0pt;text-align: left;">* Math<span style=" color: #464646;">.</span>PI / 60));</p><p class="s299" style="padding-left: 17pt;text-indent: 0pt;text-align: left;">(int) (yCenter <span style=" color: #595959;">- </span>sLength * Math<span style=" color: #464646;">.</span>cos(second * 2</p><p class="s299" style="padding-left: 140pt;text-indent: 0pt;text-align: left;">g.setColor(Color<span style=" color: #464646;">.</span>red);</p><p class="s299" style="padding-left: 140pt;text-indent: 0pt;text-align: left;">g.drawLine(xCenter, yCenter, <span style=" color: #595959;">xSecond, </span>ySecond);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-top: 5pt;padding-left: 141pt;text-indent: 0pt;line-height: 106%;text-align: left;">//Draw minute int mLength <span style=" color: #808080;">i</span><span style=" color: #595959;">nt </span>xMinute</p><p class="s299" style="padding-left: 89pt;text-indent: 0pt;text-align: left;">*Math.PI/ 60));</p><p class="s299" style="padding-left: 141pt;text-indent: 0pt;text-align: left;">int yMinute</p><p class="s299" style="padding-left: 89pt;text-indent: 0pt;text-align: left;">*Math.PI/ 60));</p><p class="s299" style="padding-top: 5pt;padding-left: 4pt;text-indent: 0pt;line-height: 106%;text-align: left;">hand: (int)</p><p class="s299" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">(int)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s300" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">(int)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 3pt;text-indent: 0pt;line-height: 10pt;text-align: left;">(clockRadius * 0.65);</p><p class="s300" style="padding-left: 3pt;text-indent: 0pt;line-height: 13pt;text-align: left;">(xCen<span style=" color: #595959;">ter </span><span class="s1605">+ </span>rnLength * Math <span style=" color: #464646;">.</span><span style=" color: #6B6B6B;">sin(minute </span><span class="s313">* </span><span style=" color: #6B6B6B;">2</span></p><p class="s300" style="padding-top: 9pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">(yCenter - rnLength <span class="s1606">* </span>Mat <span style=" color: #595959;">h.cos(minute </span><span style=" color: #6B6B6B;">* </span>2</p><p class="s299" style="padding-left: 140pt;text-indent: 0pt;text-align: left;">g.setColor(Color.black);</p><p class="s299" style="padding-left: 140pt;text-indent: 0pt;text-align: left;">g.drawLine(xCenter, yCenter, <span style=" color: #595959;">x</span><span style=" color: #808080;">Minute, </span>yMinute);</p><p style="padding-top: 3pt;padding-left: 136pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a name="bookmark93">//Draw </a><span style=" color: #4F4F4F;">hour hand:</span></p><p style="padding-left: 136pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span style=" color: #757575;">int </span>hLength <span style=" color: #757575;">= </span>(int) (clockRadius <span class="s1108">* </span>0<span style=" color: #343434;">.</span>5);</p><p style="padding-left: 136pt;text-indent: 0pt;line-height: 14pt;text-align: left;">int xHour = (int) (xCenter <span class="s1061">+ </span>hLength <span class="s1607">* </span>Math.sin(hour <span class="s1608">* </span>2 <span class="s1607">*</span></p><p style="padding-left: 85pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Math.PI/ 12));</p><p style="padding-left: 136pt;text-indent: 0pt;line-height: 14pt;text-align: left;">int yHour (int) (yCenter hLength <span class="s1608">* </span>Math.cos(hour <span class="s1607">* </span><span style=" color: #4F4F4F;">2 </span><span class="s1608">*</span></p><p style="padding-left: 85pt;text-indent: 0pt;text-align: left;">Math<span style=" color: #343434;">.</span>PI / 12));</p><p style="padding-left: 136pt;text-indent: 0pt;line-height: 106%;text-align: left;">g.setColor(Color.black); g.drawLine(xCenter, yCenter, <span style=" color: #4F4F4F;">xHour, </span>yHour);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1036" style="padding-left: 111pt;text-indent: 0pt;text-align: left;">pub<span style=" color: #4F4F4F;">lic </span><span style=" color: #606060;">void setCurrentTime() {</span></p><p style="padding-left: 135pt;text-indent: 0pt;line-height: 106%;text-align: left;">Calendar calendar= new GregorianCalendar(); this.hour= calendar.get(Calendar.HOUR_OF_DAY); <span style=" color: #757575;">this.minute= </span>calendar.get(Calendar.MINUTE); this.second= calendar.get(Calendar.SECOND);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 136pt;text-indent: -24pt;line-height: 106%;text-align: left;">public Dimension getPreferredSize() return new Dimension(400, 400);</p><p class="s1609" style="padding-top: 3pt;padding-left: 89pt;text-indent: 0pt;text-align: left;"><a name="bookmark94">Java Project: </a><span class="s1610">SimpleAnimation</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1611" style="padding-left: 89pt;text-indent: 0pt;line-height: 107%;text-align: left;"><span class="s786">Description: </span>Thi<span style=" color: #626262;">s </span>program shows <span style=" color: #494949;">a single </span>ball (randomly generated <span style=" color: #626262;">s</span>ize, di<span style=" color: #626262;">r</span>ectionand color) bouncing in the drawing panel.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part27.htm">&lt; Previous</a><span> | </span><a href="../index.html">Contents</a><span> | </span><a href="part29.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
