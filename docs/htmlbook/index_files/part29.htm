<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Sample Output:</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part28.htm">&lt; Previous</a><span> | </span><a href="../index.html">Contents</a><span> | </span><a href="part30.htm">Next &gt;</a></p><p class="s786" style="padding-top: 4pt;padding-left: 89pt;text-indent: 0pt;text-align: left;">Sample Output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="1" height="254" alt="image" src="Image_078.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="1" height="42" alt="image" src="Image_079.png"/></span></p><p class="s1613" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">â€¢               <span class="s1614">Anlmatod</span><span class="s1615">8al</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1616" style="padding-left: 67pt;text-indent: 0pt;text-align: left;">0</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s114" style="padding-top: 5pt;padding-left: 90pt;text-indent: 0pt;line-height: 10pt;text-align: left;">/*</p><p class="s455" style="padding-left: 94pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span class="s417">* </span><span style=" color: #757575;">To </span>change <span style=" color: #898989;">t</span>his license header, <span style=" color: #757575;">choose </span>License <span style=" color: #757575;">Headers in Project</span></p><p class="s455" style="padding-top: 1pt;padding-left: 90pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Properties.</p><p class="s1036" style="padding-left: 97pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span class="s417">* </span>To <span style=" color: #626262;">change </span>this <span style=" color: #626262;">template file, choose </span>Tools <span class="s1617">I </span>Templates</p><p class="s1618" style="padding-left: 97pt;text-indent: 0pt;line-height: 14pt;text-align: left;">* <span class="s455">and open </span><span class="s1036">the template in the editor.</span></p><p class="s114" style="padding-left: 96pt;text-indent: 0pt;text-align: left;">*/</p><p class="s455" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">package <span style=" color: #757575;">simpleanimation;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1036" style="padding-left: 90pt;text-indent: 0pt;line-height: 106%;text-align: left;">import <span style=" color: #898989;">j</span><span style=" color: #626262;">ava</span><span style=" color: #383838;">.</span><span style=" color: #626262;">awt.Color; import </span>java<span style=" color: #494949;">.</span>awt.Graphics;</p><p class="s455" style="padding-left: 89pt;text-indent: 0pt;line-height: 106%;text-align: left;">import <span style=" color: #757575;">java.awt.event.ActionEvent; </span>import <span style=" color: #757575;">java.awt.event</span><span style=" color: #494949;">.</span><span style=" color: #757575;">ActionListener; </span>import java.util<span style=" color: #494949;">.</span>Random;</p><p class="s1036" style="padding-left: 90pt;text-indent: 0pt;line-height: 106%;text-align: justify;">import <span style=" color: #626262;">javax.swing.JFrame; import </span>javax.swing.JPanel; import <span style=" color: #626262;">javax.swing.Timer;</span></p><p class="s114" style="padding-left: 90pt;text-indent: 0pt;line-height: 12pt;text-align: left;">/**</p><p class="s417" style="padding-left: 97pt;text-indent: 0pt;line-height: 13pt;text-align: left;">*</p><p class="s114" style="padding-left: 96pt;text-indent: 0pt;line-height: 11pt;text-align: left;">* <span class="s455">@author Adrian</span></p><p class="s114" style="padding-left: 96pt;text-indent: 0pt;text-align: left;">*/</p><p class="s1036" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">public <span style=" color: #626262;">class </span>SimpleAnimation extends <span style=" color: #626262;">JFrame {</span></p><p class="s455" style="padding-top: 9pt;padding-left: 116pt;text-indent: 0pt;line-height: 92%;text-align: justify;">pub<span style=" color: #494949;">l</span>ic static f<span style=" color: #494949;">in</span>al int W <span class="s460">= </span><span style=" color: #494949;">6</span>00 <span style=" color: #494949;">; </span>pu <span style=" color: #494949;">bl</span><span style=" color: #757575;">ic </span>stat <span style=" color: #494949;">i</span>c final <span style=" color: #757575;">int </span>H <span class="s1619">= </span>600<span style=" color: #494949;">; </span>public static do<span style=" color: #494949;">u</span>b<span style=" color: #494949;">l</span>e radius<span style=" color: #383838;">;</span></p><p class="s1620" style="padding-top: 3pt;padding-left: 111pt;text-indent: 0pt;text-align: left;"><a name="bookmark95">public static double maxRadius </a><span class="s1621">w </span><span class="s1622">I </span>2; <span class="s301">p</span><span class="s1003">u</span><span class="s301">blic static double dx;</span></p><p class="s301" style="padding-left: 111pt;text-indent: 0pt;text-align: left;">p<span style=" color: #7C7C7C;">u</span>blic static double dy; public static double <span class="s1087">x; </span>public static double <span style=" color: #696969;">y; </span>public static <span style=" color: #696969;">Color </span>co<span style=" color: #7C7C7C;">l</span>or;</p><p class="s301" style="padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;">public static double maxSpeed 20;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s301" style="padding-left: 111pt;text-indent: 0pt;text-align: left;">public SimpleAnima<span style=" color: #7C7C7C;">t</span>ion() {</p><p class="s301" style="padding-left: 136pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span style=" color: #696969;">MovingBallPanel panel= </span>new MovingBallPanel(); t<span style=" color: #7C7C7C;">h</span>is.add<span style=" color: #7C7C7C;">(</span>panel);</p><p class="s301" style="padding-left: 136pt;text-indent: 0pt;text-align: left;">initializeBa<span style=" color: #7C7C7C;">l</span>l();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 136pt;text-indent: -24pt;line-height: 106%;text-align: left;">private <span style=" color: #595959;">void initializeBall()</span>{ Random rand= new Random();</p><p class="s301" style="padding-left: 136pt;text-indent: 0pt;line-height: 11pt;text-align: left;">//create a radius between <span class="s1264">O </span>and max</p><p class="s1147" style="padding-left: 136pt;text-indent: 0pt;text-align: left;">radius= maxRadius <span style=" color: #595959;">* Math.random();</span></p><p class="s301" style="padding-left: 136pt;text-indent: 0pt;text-align: left;"><span style=" color: #696969;">//start </span>t<span style=" color: #7C7C7C;">h</span>e ball <span style=" color: #7C7C7C;">in </span><span style=" color: #696969;">the </span>center of wi<span style=" color: #7C7C7C;">nd</span>ow</p><p class="s1623" style="padding-left: 135pt;text-indent: 0pt;line-height: 106%;text-align: left;">x <span class="s1147">= </span><span class="s301">W *Math.random(); y = H * Math.random();</span></p><p class="s301" style="padding-left: 85pt;text-indent: 50pt;line-height: 106%;text-align: left;">color= new Color(rand<span style=" color: #383838;">.</span>nextint(256<span style=" color: #7C7C7C;">)</span>, rand.nextint(256), rand<span style=" color: #383838;">.</span>nextint(256));</p><p class="s301" style="padding-left: 86pt;text-indent: 50pt;line-height: 106%;text-align: left;">//start <span style=" color: #696969;">ball </span>with random dx and <span style=" color: #696969;">dy </span>between +maxspeed/2 a<span style=" color: #7C7C7C;">nd </span><span style=" color: #1F1F1F;">- </span><span style=" color: #696969;">maxspeed/2</span></p><p class="s301" style="padding-left: 136pt;text-indent: 0pt;text-align: left;"><span style=" color: #696969;">dx maxSpeed </span>* Ma<span style=" color: #7C7C7C;">t</span>h.random() - <span style=" color: #696969;">maxSpeed </span>/ 2; <span style=" color: #696969;">dy maxSpeed </span>* Ma<span style=" color: #7C7C7C;">t</span>h<span style=" color: #383838;">.</span>random() <span style=" color: #696969;">maxSpeed / </span>2;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-top: 5pt;padding-left: 111pt;text-indent: 0pt;text-align: left;">static class MovingBallPanel extends <span style=" color: #595959;">JPanel</span></p><p class="s301" style="padding-left: 136pt;text-indent: 0pt;text-align: left;">//sends <span style=" color: #696969;">an </span>event ever <span style=" color: #696969;">30 </span>milliseconds</p><p class="s301" style="padding-left: 136pt;text-indent: 0pt;text-align: left;">//timer listener <span style=" color: #696969;">reacts to each</span></p><p class="s301" style="padding-top: 1pt;padding-left: 136pt;text-indent: 0pt;text-align: left;">//of these <span style=" color: #696969;">events </span>by cal<span style=" color: #7C7C7C;">l</span>i<span style=" color: #7C7C7C;">ng </span>the <span style=" color: #696969;">method </span>repaint(); private <span style=" color: #696969;">Timer </span>timer= <span style=" color: #696969;">new Timer(30, </span>new <span style=" color: #696969;">TimerListener());</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 160pt;text-indent: -24pt;line-height: 106%;text-align: left;">public MovingBallPanel(){ timer<span style=" color: #383838;">.</span><span style=" color: #595959;">start();</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 136pt;text-indent: 0pt;text-align: left;">//must be called <span style=" color: #595959;">in </span>order <span style=" color: #595959;">to draw to </span>any <span style=" color: #595959;">JPanel</span></p><p class="s301" style="padding-left: 136pt;text-indent: 0pt;line-height: 106%;text-align: left;">//Graphics <span style=" color: #696969;">object </span>g <span style=" color: #696969;">is </span>from the <span style=" color: #696969;">OS protected </span><span class="s1625">void </span>pain<span style=" color: #7C7C7C;">t</span>Component(Graphics g){</p><p class="s301" style="padding-left: 161pt;text-indent: 0pt;line-height: 11pt;text-align: left;">super.paintComponent(g);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 161pt;text-indent: 0pt;text-align: left;">checkBoundary(); updateXYPosition(); <span style=" color: #595959;">drawBall</span>(g);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s301" style="padding-left: 186pt;text-indent: -24pt;line-height: 106%;text-align: left;">private vo<span style=" color: #7C7C7C;">id </span>checkBoundary() { if(x <span style=" color: #7C7C7C;">+ ra</span>dius &gt; getWidt<span style=" color: #7C7C7C;">h())</span>{</p><p class="s301" style="padding-left: 211pt;text-indent: 0pt;line-height: 11pt;text-align: left;">dx <span style=" color: #696969;">= -Math.abs(dx);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s301" style="padding-left: 211pt;text-indent: -24pt;text-align: left;">if <span class="s1626">(</span><span class="s1627">x </span><span class="s1628">- </span>radius&lt; <span style=" color: #696969;">0)</span>{ dx <span style=" color: #696969;">= </span>Math.abs(dx);</p><p class="s308" style="padding-left: 188pt;text-indent: 0pt;text-align: left;">}</p><p class="s301" style="padding-top: 2pt;padding-left: 186pt;text-indent: 0pt;text-align: left;">if( <span style=" color: #696969;">y </span>+radius&gt; <span style=" color: #696969;">getHeight())</span>{</p><p class="s52" style="padding-top: 4pt;padding-left: 109pt;text-indent: 0pt;text-align: center;"><a name="bookmark96">dy </a><span class="s1005">= </span>-Math.abs(dy);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 191pt;text-indent: 0pt;line-height: 11pt;text-align: left;">if(y - radius&lt; 0)<span style=" color: #898989;">{</span></p><p class="s52" style="padding-left: 109pt;text-indent: 0pt;line-height: 13pt;text-align: center;">dy <span class="s1206">= </span>Math<span style=" color: #494949;">.</span>abs(dy);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 166pt;text-indent: 0pt;line-height: 12pt;text-align: left;">private void updateXYPosi<span style=" color: #898989;">t</span>ion(){</p><p class="s52" style="padding-left: 191pt;text-indent: 0pt;line-height: 91%;text-align: left;"><span class="s1629">x </span><span class="s1630">=x </span>+ dx<span style=" color: #494949;">; </span>y <span style=" color: #797979;">= </span>y <span class="s88">+ </span>dy<span style=" color: #494949;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 191pt;text-indent: -25pt;text-align: left;">pr<span style=" color: #898989;">i</span>vate void drawBall(Grap<span style=" color: #898989;">i</span>hcs g){ g<span style=" color: #494949;">.</span>setcolor(c<span style=" color: #494949;">l</span>oor);</p><p class="s52" style="padding-left: 191pt;text-indent: 0pt;line-height: 11pt;text-align: left;">g.fillOval((int) (<span style=" color: #494949;">x - </span>radius),(int) (y - radius) <span style=" color: #494949;">,</span></p><p class="s52" style="padding-left: 89pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span style=" color: #797979;">(int) </span>(2 <span class="s63">* </span>radius),(int) <span style=" color: #797979;">(2 </span><span class="s63">* </span>radius))<span style=" color: #494949;">;</span></p><p class="s52" style="padding-left: 191pt;text-indent: 0pt;line-height: 12pt;text-align: left;">g<span style=" color: #494949;">.</span>setColor(Color<span style=" color: #494949;">.</span>b<span style=" color: #898989;">l</span>ack);</p><p class="s52" style="padding-left: 191pt;text-indent: 0pt;line-height: 11pt;text-align: left;">g<span style=" color: #494949;">.</span>drawOval((int) (x <span style=" color: #494949;">- </span>radius),(int) <span class="s618">(y - </span><span style=" color: #797979;">radius) </span><span style=" color: #494949;">,</span></p><p class="s52" style="padding-left: 89pt;text-indent: 0pt;line-height: 14pt;text-align: left;">(int) (2 <span class="s63">* </span>radius),(int) (2 <span class="s63">* </span>radius));</p><p class="s1584" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">}</p><p class="s52" style="padding-left: 166pt;text-indent: 0pt;line-height: 12pt;text-align: left;">class TimerListener <span style=" color: #797979;">implements </span>ActionListener<span style=" color: #898989;">{</span></p><p class="s52" style="padding-left: 198pt;text-indent: 0pt;line-height: 12pt;text-align: left;">//this metho<span style=" color: #494949;">, </span>action performed is called at each</p><p class="s52" style="text-indent: 0pt;text-align: right;">event</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 92pt;text-indent: -25pt;text-align: left;">public void actionPerformed(ActionEvent e){ <span style=" color: #797979;">repaint();</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s52" style="padding-left: 141pt;text-indent: -25pt;text-align: left;">pub<span style=" color: #898989;">l</span>ic static void main(String[) args) <span style=" color: #898989;">{ </span>SimpleAnimation frame= new Simp<span style=" color: #494949;">l</span>eAnimation(); frame<span style=" color: #494949;">.</span>setTitle(&quot;AnimatedBall&quot;);</p><p class="s52" style="padding-left: 141pt;text-indent: 0pt;line-height: 12pt;text-align: left;">frame<span style=" color: #494949;">.</span>setDefaultCloseOper<span style=" color: #898989;">t</span>aion(JFram<span style=" color: #494949;">.</span>eEXIT<span style=" color: #898989;">_</span>ON<span style=" color: #494949;">_</span>CLOSE);</p><p class="s52" style="padding-left: 141pt;text-indent: 0pt;line-height: 93%;text-align: left;">frame<span style=" color: #494949;">.</span>setSize(W,H); frame.setVisible(tru<span style=" color: #494949;">;</span>e)</p><p class="s1632" style="padding-top: 2pt;padding-left: 86pt;text-indent: 0pt;text-align: justify;"><a name="bookmark97">Java Project: </a><span class="s1633">AnimatedBalls</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1165" style="padding-left: 85pt;text-indent: 0pt;text-align: justify;"><b>Description: </b>This program <span style=" color: #343434;">shows </span>many balls bouncing <span style=" color: #343434;">in the ddrawing </span>panel. You <span style=" color: #343434;">can change </span>the <span style=" color: #343434;">number </span>of balls, their <span style=" color: #343434;">size, speed and </span>color. <span style=" color: #343434;">You can also change what </span>happens <span style=" color: #343434;">when </span>they collide. The default code just has them bounce off <span style=" color: #343434;">each </span>other <span style=" color: #343434;">and </span>change <span style=" color: #343434;">color </span>in a certain <span style=" color: #343434;">way </span>(look <span style=" color: #343434;">at </span>the <span style=" color: #343434;">code </span>to <span style=" color: #343434;">see </span>how/when <span style=" color: #343434;">a </span>ball&#39;s color changes), but <span style=" color: #343434;">you </span>can invent <span style=" color: #343434;">other </span>things happens <span style=" color: #343434;">such </span>as explosions etc.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1164" style="padding-left: 85pt;text-indent: 0pt;text-align: justify;">Sample Output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 156pt;text-indent: 0pt;text-align: left;"><span><img width="424" height="326" alt="image" src="Image_080.jpg"/></span></p><p class="s299" style="padding-top: 3pt;padding-left: 89pt;text-indent: 0pt;text-align: left;"><a name="bookmark98">package animatedballs;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1202" style="padding-left: 89pt;text-indent: 0pt;text-align: left;"><span style=" color: #6B6B6B;">import java.awt</span>.<span style=" color: #6B6B6B;">Color; import java</span>.<span style=" color: #575757;">awt</span>.<span style=" color: #6B6B6B;">Graphics;</span></p><p class="s299" style="padding-left: 89pt;text-indent: 0pt;line-height: 106%;text-align: left;">import java<span style=" color: #3D3D3D;">.</span><span style=" color: #575757;">awt</span><span style=" color: #3D3D3D;">.</span><span style=" color: #575757;">event.Ac</span><span style=" color: #8C8C8C;">t</span>ionEvent; <span style=" color: #575757;">import </span><span style=" color: #8C8C8C;">j</span>ava.awt.event.Ac<span style=" color: #8C8C8C;">t</span>ionListener; <span style=" color: #575757;">import </span><span style=" color: #7E7E7E;">java</span><span style=" color: #575757;">.awt.event.MouseAdapter; </span>import <span style=" color: #8C8C8C;">j</span>ava.awt.event.MouseEvent; import java.ut<span style=" color: #8C8C8C;">il</span><span style=" color: #575757;">.Random;</span></p><p class="s299" style="padding-left: 89pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span style=" color: #575757;">import </span>java.util.Vector; import javax<span style=" color: #3D3D3D;">.</span>swing.JFrame; import javax.swing<span style=" color: #3D3D3D;">.</span>JPanel; <span style=" color: #575757;">import javax.swing</span><span style=" color: #3D3D3D;">.</span>T<span style=" color: #8C8C8C;">i</span>mer;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 89pt;text-indent: 0pt;text-align: left;">public class AnimatedBalls extends JFrame {</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-top: 5pt;padding-left: 115pt;text-indent: 0pt;text-align: justify;">public static public static public static publ<span style=" color: #8C8C8C;">i</span>c static pub<span style=" color: #8C8C8C;">li</span>c static pub<span style=" color: #8C8C8C;">li</span>c static public static public static <span style=" color: #7E7E7E;">public </span>stat<span style=" color: #8C8C8C;">i</span>c public static public static public static public stat<span style=" color: #8C8C8C;">i</span>c public stat<span style=" color: #8C8C8C;">i</span>c public static public static</p><p class="s1085" style="padding-top: 5pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">int <span style=" color: #6B6B6B;">W 900;</span></p><p class="s646" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;line-height: 79%;text-align: left;"><span style=" color: #7E7E7E;">int </span><span style=" color: #6B6B6B;">H 700; int </span>n <span class="s1090">= </span><span style=" color: #8C8C8C;">1</span>000;</p><p class="s646" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">int <span style=" color: #6B6B6B;">m = 6;</span></p><p class="s299" style="padding-left: 3pt;text-indent: 0pt;text-align: left;">doub<span style=" color: #8C8C8C;">l</span>e[] <span style=" color: #575757;">radius= new </span>double[n<span style=" color: #8C8C8C;">]</span>;</p><p class="s299" style="padding-top: 2pt;padding-left: 3pt;text-indent: 0pt;line-height: 80%;text-align: left;">doub<span style=" color: #8C8C8C;">l</span>e minRadius = 5; double maxRadius <span class="s1634">= </span>15; <span style=" color: #7E7E7E;">double[ </span><span style=" color: #575757;">) </span>dx <span class="s1090">= </span><span style=" color: #7E7E7E;">new </span>double[n]; <span style=" color: #7E7E7E;">double[] </span>dy <span class="s1635">= </span><span style=" color: #7E7E7E;">new </span>double[n];</p><p class="s299" style="padding-left: 3pt;text-indent: 0pt;line-height: 12pt;text-align: left;">double[<span style=" color: #8C8C8C;">] </span>x <span class="s1635">= </span><span style=" color: #7E7E7E;">new </span><span style=" color: #575757;">doub</span><span style=" color: #7E7E7E;">le</span><span style=" color: #575757;">[n]; </span>double[<span style=" color: #8C8C8C;">] </span>y = <span style=" color: #7E7E7E;">new </span>double[n];</p><p class="s299" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;line-height: 106%;text-align: left;">Co<span style=" color: #8C8C8C;">l</span>or[] color= <span style=" color: #575757;">new </span><span style=" color: #7E7E7E;">Co</span><span style=" color: #575757;">lor[n</span><span style=" color: #8C8C8C;">]</span>; double speed= <span style=" color: #8C8C8C;">1</span><span style=" color: #575757;">;</span></p><p class="s299" style="padding-left: 3pt;text-indent: 0pt;line-height: 106%;text-align: left;">int[] active= new in<span style=" color: #8C8C8C;">t</span>[n); int[] score= new int[n);</p><p class="s299" style="padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;">int[][] gene <span class="s1635">= </span>new int[n]<span style=" color: #7E7E7E;">[m]</span><span style=" color: #575757;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-top: 5pt;padding-left: 116pt;text-indent: 0pt;line-height: 11pt;text-align: left;">publ<span style=" color: #8C8C8C;">i</span>c AnimatedBalls{)</p><p class="s646" style="padding-left: 141pt;text-indent: 0pt;line-height: 110%;text-align: left;">MovingBallPa<span style=" color: #7E7E7E;">nel </span><span style=" color: #6B6B6B;">panel= </span>new <span style=" color: #7E7E7E;">Mov</span>ingBa<span style=" color: #7E7E7E;">llPane</span>l(); <span style=" color: #6B6B6B;">this</span><span style=" color: #3D3D3D;">.</span><span style=" color: #6B6B6B;">add(panel);</span></p><p class="s299" style="padding-left: 141pt;text-indent: 0pt;line-height: 106%;text-align: left;">initializeBa<span style=" color: #3D3D3D;">l</span>ls{}; <span style=" color: #575757;">printBal</span><span style=" color: #7E7E7E;">ls(}</span><span style=" color: #3D3D3D;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1085" style="padding-left: 141pt;text-indent: -25pt;text-align: left;">publ<span style=" color: #575757;">ic </span><span style=" color: #6B6B6B;">static void printBalls(} for (inti= 0; </span>i <span class="s309">&lt; </span><span style=" color: #6B6B6B;">n; i++}</span></p><p class="s299" style="padding-left: 166pt;text-indent: 0pt;line-height: 106%;text-align: left;">System <span style=" color: #3D3D3D;">.</span>out.prin <span style=" color: #8C8C8C;">t</span>(i}; System.out.print(&quot; <span style=" color: #575757;">&quot;};</span></p><p class="s299" style="padding-left: 166pt;text-indent: 0pt;line-height: 11pt;text-align: left;">for (int g <span class="s1636">= </span>O; g <span class="s309">&lt; </span>m; g++}</p><p class="s299" style="padding-left: 38pt;text-indent: 0pt;text-align: center;">System.out.pr <span style=" color: #8C8C8C;">i</span>nt(gene[i <span style=" color: #8C8C8C;">]</span><span style=" color: #575757;">[g)};</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 167pt;text-indent: 0pt;text-align: left;">Sys<span style=" color: #8C8C8C;">t</span>em<span style=" color: #3D3D3D;">.</span>out.println{&quot;&quot;);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s299" style="padding-left: 142pt;text-indent: -25pt;line-height: 106%;text-align: left;">private void in<span style=" color: #8C8C8C;">it</span>ializeBalls() <span style=" color: #575757;">{ </span>Random <span style=" color: #7E7E7E;">ra</span><span style=" color: #575757;">nd = new </span>Random();</p><p class="s360" style="padding-top: 4pt;padding-left: 136pt;text-indent: 0pt;line-height: 94%;text-align: justify;"><a name="bookmark99">int r </a><span class="s369">= </span><span class="s381">0; </span>int g = <span class="s1637">O; </span>int <span class="s368">b </span><span class="s1638">0;</span></p><p class="s360" style="padding-left: 136pt;text-indent: 0pt;line-height: 12pt;text-align: justify;">for (inti= 0; i <span class="s375">&lt; </span>n; i++)</p><p class="s360" style="padding-left: 86pt;text-indent: 74pt;line-height: 106%;text-align: left;">radiu<span style=" color: #8A8A8A;">[</span>si] Math<span style=" color: #3D3D3D;">.</span>random();</p><p class="s360" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">minRadius <span style=" color: #525252;">+ </span>(maxRadius - minRadius) <span style=" color: #525252;">*</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s222" style="padding-top: 5pt;padding-left: 86pt;text-indent: 74pt;line-height: 106%;text-align: left;">x[i] <span style=" color: #646464;">= </span>radius<span style=" color: #8A8A8A;">[</span><span style=" color: #646464;">i] + (W 2 * radius[i)) * rand.nextDouble();</span></p><p class="s360" style="padding-left: 86pt;text-indent: 74pt;text-align: left;">y<span style=" color: #3D3D3D;">[</span>i] <span style=" color: #7C7C7C;">= </span>radius[<span style=" color: #8A8A8A;">i) </span><span style=" color: #7C7C7C;">+ </span>(H - 2 <span style=" color: #525252;">* </span>radius[i]) <span style=" color: #525252;">* </span>rand.nextDouble();</p><p class="s360" style="padding-top: 9pt;padding-left: 161pt;text-indent: 0pt;line-height: 13pt;text-align: left;">//x[i] <span class="s361">= </span>W/2;</p><p class="s222" style="padding-left: 161pt;text-indent: 0pt;line-height: 13pt;text-align: left;">//y[i] <span class="s361">= </span><span style=" color: #646464;">H/2;</span></p><p class="s360" style="padding-left: 86pt;text-indent: 74pt;text-align: left;">//color[i] <span class="s1639">= </span><span style=" color: #525252;">new </span>Color(rand.nextint(256), rand.nextint(256), rand<span style=" color: #3D3D3D;">.n</span>extint(256));</p><p class="s360" style="padding-left: 161pt;text-indent: 0pt;line-height: 11pt;text-align: left;">active[i<span style=" color: #8A8A8A;">] </span><span class="s1640">= </span>l;</p><p class="s360" style="padding-left: 161pt;text-indent: 0pt;line-height: 14pt;text-align: left;">for (int k <span class="s138">= </span><span class="s1376">O; </span>k <span class="s1637">&lt; </span>m; <span style=" color: #525252;">k++)</span></p><p class="s222" style="padding-left: 187pt;text-indent: 0pt;text-align: left;">gene<span style=" color: #8A8A8A;">[</span><span style=" color: #646464;">i][k] = (int) (2 </span>* <span style=" color: #646464;">Math.random());</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 161pt;text-indent: 0pt;line-height: 10pt;text-align: left;">r = setColor(i, gene[i] <span class="s1096">[O], </span>gene[i]<span style=" color: #525252;">[l</span><span style=" color: #8A8A8A;">]</span>);</p><p class="s360" style="padding-left: 161pt;text-indent: 0pt;line-height: 14pt;text-align: left;">g <span class="s1640">= </span>setColor(i, <span style=" color: #525252;">gene</span>[i][2<span style=" color: #8A8A8A;">]</span><span style=" color: #525252;">, </span>gene[i] <span class="s1107">[ 3 </span><span class="s1641">] </span><span class="s1039">) ;</span></p><p class="s360" style="padding-left: 161pt;text-indent: 0pt;text-align: left;">b setColor(i, <span style=" color: #525252;">gene[i]</span>[4], gene[i] <span class="s208">[ S </span><span class="s1642">J </span><span class="s1096">) ;</span></p><p class="s360" style="padding-left: 161pt;text-indent: 0pt;line-height: 106%;text-align: left;">color[i] new Color(r, g, b); score[i] = setScore(i);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-top: 5pt;text-indent: 0pt;text-align: right;">dx<span style=" color: #3D3D3D;">[</span>i]</p><p class="s360" style="text-indent: 0pt;text-align: right;">dy[i]</p><p class="s360" style="padding-top: 5pt;padding-left: 15pt;text-indent: -12pt;line-height: 106%;text-align: left;">= score[i] <span style=" color: #525252;">* Math.random</span><span style=" color: #7C7C7C;">() </span>score[i] <span style=" color: #525252;">* </span>Math.random()</p><p class="s222" style="padding-top: 5pt;padding-left: 16pt;text-indent: 0pt;text-align: left;">score[i) <span style=" color: #646464;">/ </span>2;</p><p class="s222" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">score[i) / <span style=" color: #646464;">2;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s377" style="padding-top: 4pt;padding-left: 137pt;text-indent: 0pt;text-align: left;">}</p><p class="s360" style="padding-top: 2pt;padding-left: 136pt;text-indent: 0pt;text-align: left;">//color[n-1) Color.GRAY;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-top: 10pt;padding-left: 136pt;text-indent: -24pt;text-align: left;">public static int setScore(int <span style=" color: #7C7C7C;">i) </span>int sum= 0;</p><p class="s360" style="padding-left: 136pt;text-indent: 0pt;line-height: 12pt;text-align: left;">for (int <span style=" color: #525252;">k </span>= 0<span style=" color: #3D3D3D;">; </span><span style=" color: #525252;">k </span><span class="s1575">&lt; </span>m; k++) <span style=" color: #7C7C7C;">{</span></p><p class="s360" style="padding-left: 136pt;text-indent: 25pt;line-height: 208%;text-align: left;">sum += gene[i<span style=" color: #8A8A8A;">)</span>[k); <span style=" color: #525252;">return </span>sum;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s360" style="padding-left: 136pt;text-indent: -24pt;text-align: left;"><span style=" color: #525252;">public </span>static <span style=" color: #7C7C7C;">int </span>setColor(int i, <span style=" color: #7C7C7C;">int </span><span style=" color: #525252;">vl, </span>int v2) { if (vl == 0 <span style=" color: #525252;">&amp;&amp; </span>v2 == 0) {</p><p class="s360" style="padding-left: 161pt;text-indent: 0pt;text-align: left;">return <span style=" color: #525252;">(int) </span>(64 * Math.random());</p><p class="s222" style="padding-left: 161pt;text-indent: 0pt;text-align: left;">//return <span style=" color: #646464;">0;</span></p><p class="s360" style="padding-left: 149pt;text-indent: 0pt;line-height: 11pt;text-align: left;">else if (vl <span style=" color: #525252;">O &amp;&amp; </span>v2 == 1) <span style=" color: #525252;">{</span></p><p class="s360" style="padding-left: 149pt;text-indent: 12pt;line-height: 86%;text-align: left;">return 64 <span class="s1390">+ </span>(int) (64 <span style=" color: #525252;">* </span>Math<span style=" color: #3D3D3D;">.</span>random()); else if (vl <span class="s1639">== </span>1 <span style=" color: #525252;">&amp;&amp; </span>v2 <span class="s1643">== </span>0) {</p><p class="s360" style="padding-left: 149pt;text-indent: 12pt;line-height: 90%;text-align: left;">return 128 <span class="s1644">+ </span>(int) (64 *Math.random()); else if (vl <span class="s1643">== </span>1 &amp;&amp; v2 == 1) {</p><p class="s222" style="padding-left: 161pt;text-indent: 0pt;line-height: 12pt;text-align: left;">return 192 <span class="s1644">+ </span><span style=" color: #646464;">(int) (64 </span>* Math.ra<span style=" color: #7C7C7C;">ndom())</span>;</p><p class="s360" style="padding-left: 136pt;text-indent: 25pt;line-height: 208%;text-align: left;">//return 255; return O;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-top: 5pt;padding-left: 114pt;text-indent: 0pt;text-align: left;"><a name="bookmark100">static class MovingBallPanel extends JPanel</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 140pt;text-indent: 0pt;line-height: 110%;text-align: left;">private Timer <span style=" color: #7E7E7E;">timer= </span>new Timer(30, new TimerListener()); public boolean timer_stop = false;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s40" style="padding-left: 165pt;text-indent: -25pt;line-height: 106%;text-align: left;"><span style=" color: #696969;">public </span>MovingBal<span style=" color: #7E7E7E;">lPa</span>ne<span style=" color: #7E7E7E;">l() </span>{ <span style=" color: #696969;">timer</span><span style=" color: #4B4B4B;">.st</span><span style=" color: #696969;">art();</span></p><p class="s1147" style="padding-left: 191pt;text-indent: -26pt;line-height: 106%;text-align: left;">this.addMouseListener(new MouseAdapter() <span style=" color: #5B5B5B;">{ </span>public void mouseClicked(MouseEvent e)</p><p class="s1147" style="padding-left: 216pt;text-indent: 0pt;text-align: left;"><span style=" color: #5B5B5B;">int </span>delay= timer.getDelay<span style=" color: #4B4B4B;">;</span>()</p><p class="s1147" style="padding-left: 242pt;text-indent: -25pt;line-height: 110%;text-align: left;">if (e<span style=" color: #4B4B4B;">.</span>getButton()<span style=" color: #7E7E7E;">== </span>MouseEven<span style=" color: #4B4B4B;">.</span>tBUTTONl) if (timer<span style=" color: #1F1F1F;">_</span>stop){</p><p class="s1147" style="padding-left: 267pt;text-indent: 0pt;line-height: 10pt;text-align: left;">timer.start<span style=" color: #4B4B4B;">;</span>()</p><p class="s1147" style="padding-left: 254pt;text-indent: 12pt;line-height: 106%;text-align: left;">timer<span style=" color: #4B4B4B;">_</span>stop = fa<span style=" color: #909090;">l</span>se<span style=" color: #4B4B4B;">; </span>else <span style=" color: #5B5B5B;">{</span></p><p class="s1147" style="padding-left: 267pt;text-indent: 0pt;line-height: 106%;text-align: left;">timer<span style=" color: #4B4B4B;">.</span>stop()<span style=" color: #4B4B4B;">; </span>timer_stop = true;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="text-indent: 0pt;text-align: right;">5000);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 89pt;text-indent: 12pt;text-align: left;">//timer.setDelay(delay &gt; 5? delay - 5 <span style=" color: #4B4B4B;">: </span>5)<span style=" color: #4B4B4B;">; </span>else if (e.getButton() == MouseEvent.BUTTON3)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1085" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">timer<span style=" color: #4B4B4B;">.</span><span style=" color: #696969;">setDelay(delay </span><span class="s1264">&lt; </span>5000? <span style=" color: #696969;">delay+ 5 </span><span style=" color: #4B4B4B;">:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1645" style="padding-left: 167pt;text-indent: 0pt;text-align: left;">} <span class="s1646">) </span><span class="s1647">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 165pt;text-indent: -25pt;line-height: 106%;text-align: left;">protected void paintComponent(Graphics g) { super.paintComponent{g); chec<span style=" color: #4B4B4B;">k</span>Boundary();</p><p class="s1147" style="padding-left: 166pt;text-indent: 0pt;line-height: 106%;text-align: left;">checkCollisions(); updateXYPositions()<span style=" color: #4B4B4B;">;</span></p><p class="s1147" style="padding-left: 165pt;text-indent: 0pt;line-height: 106%;text-align: left;">//pumpVelocities(); drawBalls(g)<span style=" color: #4B4B4B;">;</span></p><p class="s1147" style="padding-left: 166pt;text-indent: 0pt;text-align: left;">//printBalls()<span style=" color: #5B5B5B;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 166pt;text-indent: -25pt;line-height: 106%;text-align: left;"><span style=" color: #5B5B5B;">pr</span><span style=" color: #7E7E7E;">i</span><span style=" color: #5B5B5B;">vate </span><i>vo</i><span class="s1648">i</span><i>d </i>checkBoundary() <span style=" color: #5B5B5B;">{ </span>for (inti= 0<span style=" color: #4B4B4B;">; </span><span style=" color: #7E7E7E;">i </span><span class="s1649">&lt; </span>n;i+<span style=" color: #4B4B4B;">+</span>)</p><p class="s1147" style="padding-left: 192pt;text-indent: 0pt;line-height: 11pt;text-align: left;">if <span class="s1650">(x</span><span class="s1651">[</span><span class="s1650">i] </span>+ radius[i] <span class="s1110">&gt; </span>getW<span style=" color: #4B4B4B;">i</span><span style=" color: #7E7E7E;">dt</span><span style=" color: #5B5B5B;">h(</span><span style=" color: #7E7E7E;">))</span></p><p class="s1147" style="padding-left: 217pt;text-indent: 0pt;text-align: left;"><span class="s1650">dx[i</span><span class="s1652">] </span>= -Math.abs(dx <span style=" color: #909090;">[</span>i]);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-top: 9pt;padding-left: 192pt;text-indent: 0pt;text-align: left;">if (<span style=" color: #4B4B4B;">x</span><span style=" color: #5B5B5B;">[</span><span style=" color: #7E7E7E;">i] </span><span style=" color: #4B4B4B;">- </span>radius<span style=" color: #7E7E7E;">[i) </span><span class="s1522">&lt; </span>0) {</p><p class="s1147" style="padding-left: 217pt;text-indent: 0pt;text-align: left;"><span class="s1650">dx</span><span class="s1651">[</span><span class="s1650">i] </span>= <span style=" color: #5B5B5B;">Ma</span><span style=" color: #7E7E7E;">th</span><span style=" color: #4B4B4B;">.</span>abs(dx[i <span style=" color: #909090;">]</span>)<span style=" color: #4B4B4B;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 217pt;text-indent: -25pt;line-height: 85%;text-align: left;">if <span class="s1148">(y[i] </span><span style=" color: #7E7E7E;">+ </span><span style=" color: #5B5B5B;">radius</span><span style=" color: #909090;">[</span>i) <span class="s1122">&gt; </span>getHeight()) <span style=" color: #5B5B5B;">dy[i] </span><span class="s1635">= </span>-Math.abs(dy <span style=" color: #909090;">[i</span><span style=" color: #5B5B5B;">]);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s906" style="padding-top: 4pt;padding-left: 186pt;text-indent: 0pt;text-align: left;"><a name="bookmark101">if  (y [ i </a><span style=" color: #898989;">] </span>- radius[i] &lt; 0) {</p><p class="s906" style="padding-left: 211pt;text-indent: 0pt;text-align: left;">d y <span style=" color: #898989;">[ </span>i <span style=" color: #898989;">] </span>= <span style=" color: #4F4F4F;">Math.abs(dy[i]);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s906" style="padding-left: 136pt;text-indent: 0pt;line-height: 11pt;text-align: left;">private void updateXYPositions(} <span class="s1150">{</span></p><p class="s906" style="padding-left: 161pt;text-indent: 0pt;line-height: 12pt;text-align: left;">for (int <span class="s1654">i </span>= <span class="s114">0; </span><span class="s1655">i </span><span style=" color: #4F4F4F;">&lt; </span>n; i++) <span class="s463">{</span></p><p class="s906" style="padding-left: 186pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span class="s1656">X </span>[i l = <span class="s1656">X </span><span class="s1657">[ </span>i <span style=" color: #898989;">] </span>+ dx <span style=" color: #4F4F4F;">[ </span><span class="s1655">i </span><span style=" color: #4F4F4F;">l </span>;</p><p class="s906" style="padding-left: 187pt;text-indent: 0pt;text-align: left;"><span style=" color: #4F4F4F;">y[i] </span>= <span class="s1658">y </span><span class="s1371">[ </span>i <span style=" color: #898989;">] </span>+ dy<span style=" color: #4F4F4F;">[</span><span class="s1655">i </span>l<span style=" color: #4F4F4F;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s906" style="padding-left: 161pt;text-indent: -25pt;text-align: left;">private void <span style=" color: #4F4F4F;">drawBalls(Graphics </span>g} for (int <span style=" color: #4F4F4F;">i </span>= 0; <span style=" color: #4F4F4F;">i </span>&lt; n; i++) <span style=" color: #777;">{</span></p><p class="s906" style="padding-left: 186pt;text-indent: 0pt;text-align: left;">if    (a c t i ve <span style=" color: #898989;">[ </span>i ] <span class="s1150">== </span><span class="s1042">1} </span><span class="s773">{</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s906" style="padding-left: 211pt;text-indent: 0pt;text-align: left;">g.setColor(color[i]);</p><p class="s906" style="padding-left: 211pt;text-indent: 0pt;line-height: 11pt;text-align: left;">g.fillOval((int)  (x [ i <span style=" color: #898989;">]   </span><span style=" color: #4F4F4F;">- </span>r  ad i us [ i <span style=" color: #898989;">] </span>) ,   (int) ( y [ i <span style=" color: #898989;">]</span></p><p class="s906" style="padding-left: 85pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span style=" color: #2D2D2D;">- </span>radius [i]), (int) <span class="s463">(2 </span><span class="s1660">* </span>radius [i]), (int) <span class="s463">(2 </span>* radius <span style=" color: #4F4F4F;">[i]));</span></p><p class="s906" style="padding-left: 211pt;text-indent: 0pt;text-align: left;">g.setCo l o r (Co l o r <span style=" color: #2D2D2D;">. </span>bl a c k} ;</p><p class="s906" style="padding-left: 211pt;text-indent: 0pt;line-height: 11pt;text-align: left;">g.drawOval((int) <span class="s1661">(x[i] </span><span class="s907">- </span>radius[i]), <span style=" color: #777;">(i </span><span style=" color: #4F4F4F;">nt ) </span>(y[i]</p><p class="s906" style="padding-left: 86pt;text-indent: 0pt;line-height: 13pt;text-align: left;">-  radius [i <span style=" color: #898989;">]</span>} ,   (int)  <span class="s1150">(2 </span><span class="s1607">* </span>radius [i <span style=" color: #898989;">]</span>) ,   (int} <span class="s1371">(2 </span><span style=" color: #4F4F4F;">* </span>radius <span style=" color: #4F4F4F;">[i]));</span></p><p class="s906" style="padding-left: 212pt;text-indent: 0pt;line-height: 11pt;text-align: left;">/lg.drawstring(&#39;&quot;&#39;+ <span style=" color: #777;">i </span><span style=" color: #4F4F4F;">, </span>(int) <span class="s1661">(x[i]), </span><span style=" color: #777;">(int)</span></p><p class="s906" style="padding-left: 87pt;text-indent: 0pt;line-height: 11pt;text-align: left;">(y[i]));</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s906" style="padding-left: 161pt;text-indent: -25pt;text-align: left;">private void checkCollisions()  <span style=" color: #4F4F4F;">{ </span>for    (int <span style=" color: #4F4F4F;">i </span>= <span class="s459">O; </span><span style=" color: #4F4F4F;">i </span>&lt; n; i++) <span style=" color: #4F4F4F;">{</span></p><p class="s906" style="padding-left: 187pt;text-indent: 0pt;text-align: left;">for   (int  j <span class="s1150">= </span>i  +  1;   j  <span style=" color: #4F4F4F;">&lt; </span>n;   j++) {</p><p class="s906" style="padding-left: 211pt;text-indent: 0pt;text-align: left;"><span style=" color: #4F4F4F;">double </span>dist= Ma t h . s q<span style=" color: #898989;">r </span>t (Ma t h . po w (x [ j ] <span style=" color: #2D2D2D;">- </span><span class="s1662">x </span><span class="s1663">[ i </span><span class="s1661">] , </span>2)</p><p class="s784" style="padding-left: 85pt;text-indent: 0pt;text-align: left;">+ <span style=" color: #4F4F4F;">Ma </span>t h <span style=" color: #4F4F4F;">. p o w (y [ j ] </span><span style=" color: #626262;">- y </span><span style=" color: #898989;">[ </span><span style=" color: #626262;">i ] , 2)};</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s906" style="padding-left: 86pt;text-indent: 0pt;text-align: left;">radius[j])} <span style=" color: #4F4F4F;">{</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s906" style="padding-top: 9pt;padding-left: 85pt;text-indent: 0pt;line-height: 193%;text-align: left;">gene<span style=" color: #4F4F4F;">[ </span>j <span style=" color: #4F4F4F;">] </span>[1<span style=" color: #898989;">]</span><span style=" color: #777;">} </span><span style=" color: #4F4F4F;">; </span>gene[ j <span class="s1664">J [ </span>3 <span class="s1665">l </span><span class="s362">) </span><span class="s1666">;</span></p><p class="s906" style="padding-left: 85pt;text-indent: 0pt;line-height: 10pt;text-align: left;">gene<span style=" color: #4F4F4F;">[ </span>j ] [5l <span style=" color: #777;">) </span><span style=" color: #4F4F4F;">;</span></p><p class="s906" style="padding-top: 4pt;padding-left: 65pt;text-indent: -25pt;text-align: left;"><span style=" color: #777;">if   </span>(active[i]      1 <span class="s1667">&amp;&amp; </span>active[j] <span class="s1371">== </span><span style=" color: #777;">l} </span><span style=" color: #4F4F4F;">{ </span>if (dist&gt; 0 <span class="s1667">&amp;&amp;</span><span style=" color: #4F4F4F;">dist&lt;= </span>(radius[i] +</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s906" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><span style=" color: #777;">if </span>(s cor e [ i <span style=" color: #898989;">] </span>&gt; score[jl) {</p><p class="s906" style="padding-left: 141pt;text-indent: -24pt;text-align: left;"><span style=" color: #4F4F4F;">/*for </span>(int k = 0; <span style=" color: #4F4F4F;">k </span>&lt; m; k++) gene[j] [kl = gene<span style=" color: #898989;">[</span>i ] [k];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s906" style="padding-left: 116pt;text-indent: 0pt;line-height: 206%;text-align: justify;">int <span style=" color: #777;">r = </span>setColor(j, gene[j] [0], int g setColor(j, gene[j <span style=" color: #898989;">] </span>[2], int b = set Co l or ( <span style=" color: #898989;">j </span>, ge ne [ j <span style=" color: #898989;">] </span>[41,</p><p class="s906" style="padding-left: 116pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">color[j] <span class="s1668">= </span>newColor(r, g, <span class="s1150">b) </span><span class="s781">;</span></p><p class="s906" style="padding-left: 116pt;text-indent: 0pt;text-align: justify;">score[j) <span class="s910">= </span>setScore(j};</p><p class="s114" style="padding-left: 122pt;text-indent: 0pt;line-height: 12pt;text-align: left;">*/</p><p class="s906" style="padding-left: 116pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">color[j] <span class="s183">= </span>color[i];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><a name="bookmark102">gene </a><span style=" color: #8E8E8E;">(i</span>] <span class="s1646">[ 1 </span><span class="s1669">] </span><span class="s1646">) ;</span></p><p class="s918" style="padding-top: 6pt;padding-left: 88pt;text-indent: 0pt;text-align: left;">/*</p><p class="s1147" style="padding-left: 88pt;text-indent: 0pt;line-height: 10pt;text-align: left;">else</p><p class="s1147" style="padding-left: 114pt;text-indent: 0pt;line-height: 13pt;text-align: left;">for (int <span class="s1670">k </span><span class="s1266">= </span>0; <span class="s1671">k </span><span class="s1065">&lt; </span><span class="s1672">m; </span><span class="s1671">k++) </span><span class="s1673">{</span></p><p class="s1147" style="padding-left: 114pt;text-indent: 25pt;line-height: 179%;text-align: left;"><span style=" color: #565656;">gene</span>[i][k<span style=" color: #484848;">l </span>= gene<span style=" color: #8E8E8E;">[</span>j<span style=" color: #565656;">][kl ; </span>int r <span class="s1266">= </span>setColor(i, gene[i]<span class="s1674">[OJ,</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">gene[i] <span class="s1675">[3]);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 88pt;text-indent: 0pt;line-height: 6pt;text-align: left;">gene[i][<span class="s1672">5] ) ;</span></p><p class="s1147" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">int g setColor(i, gene[i][2],</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s619" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">i<span style=" color: #696969;">nt b setColor(i, gene[i</span><span style=" color: #484848;">] </span><span class="s1676">[4],</span></p><p class="s1147" style="padding-top: 2pt;padding-left: 292pt;text-indent: 0pt;line-height: 79%;text-align: left;">color[i] <span class="s1677">= </span>new Color(r<span style=" color: #484848;">, </span>g, b); score[i] <span class="s138">= </span><span style=" color: #565656;">setSco </span><span style=" color: #7C7C7C;">re(</span><span style=" color: #565656;">i);</span></p><p class="s1147" style="padding-left: 292pt;text-indent: 0pt;line-height: 13pt;text-align: left;">//color[i] <span class="s1678">= </span>color[j <span style=" color: #484848;">];</span></p><p class="s1679" style="padding-top: 11pt;padding-left: 109pt;text-indent: 0pt;text-align: center;">*I</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-top: 5pt;padding-left: 267pt;text-indent: 0pt;text-align: left;">elasticCollision(i <span style=" color: #484848;">, </span><span style=" color: #7C7C7C;">j)</span><span style=" color: #565656;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-top: 8pt;padding-left: 165pt;text-indent: -25pt;line-height: 106%;text-align: left;">public void pumpVelocities() { double <span style=" color: #7C7C7C;">epsilon= </span>0.5;</p><p class="s1147" style="padding-left: 165pt;text-indent: 0pt;line-height: 11pt;text-align: left;">for (in<span style=" color: #8E8E8E;">t </span>i = <span class="s1161">0</span><span class="s1062">; </span>i &lt; n; <span style=" color: #8E8E8E;">i</span>++)</p><p class="s1003" style="padding-left: 216pt;text-indent: -25pt;text-align: left;">if (Ma<span style=" color: #565656;">t</span>h.abs(d<span style=" color: #565656;">x[i]) </span><span class="s1264">&lt; </span><span style=" color: #696969;">epsilon) </span>dx <span class="s1675">[i]      </span><span style=" color: #696969;">*= </span>1.<span style=" color: #696969;">0;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 216pt;text-indent: -24pt;line-height: 107%;text-align: left;">if <span style=" color: #7C7C7C;">(Math</span><span style=" color: #484848;">.</span>abs(dy[i<span style=" color: #8E8E8E;">]</span>) <span class="s1264">&lt; </span>epsi<span style=" color: #8E8E8E;">l</span>on) <span style=" color: #565656;">{ </span>dy[i] *= <span style=" color: #565656;">1.0;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1274" style="padding-left: 141pt;text-indent: 0pt;text-align: left;">private <span style=" color: #696969;">void checkCollissions2() {</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1003" style="padding-left: 141pt;text-indent: 0pt;text-align: left;">public <span style=" color: #696969;">void </span>ela<span style=" color: #565656;">s</span>ticCollision(int i, <span style=" color: #565656;">int </span><span style=" color: #696969;">j) {</span></p><p class="s1147" style="padding-top: 1pt;padding-left: 166pt;text-indent: 0pt;text-align: left;">// get the mtd</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1003" style="padding-left: 89pt;text-indent: 0pt;text-align: left;">delta<span style=" color: #565656;">_y)</span>)<span style=" color: #565656;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 90pt;text-indent: 0pt;text-align: left;">delta <span style=" color: #565656;">x;</span></p><p class="s1147" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">double <span style=" color: #7C7C7C;">delta </span><span class="s1148">x </span>= <span class="s1680">x[</span><span class="s1626">i] </span><span class="s1681">- </span>x[j]; double <span style=" color: #7C7C7C;">delta</span><span style=" color: #565656;">_y </span>= y[i] - y[j];</p><p class="s1147" style="padding-left: 9pt;text-indent: 0pt;line-height: 12pt;text-align: left;">doubled= Math.sqrt((delta<span style=" color: #8E8E8E;">_</span>x * delta x + delta<span style=" color: #363636;">_</span>y <span class="s1453">*</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1147" style="padding-left: 9pt;text-indent: 0pt;text-align: left;"><span style=" color: #565656;">do</span><span style=" color: #7C7C7C;">uble </span>mtd <span style=" color: #565656;">x </span><span class="s1266">= </span>((radius[i <span style=" color: #8E8E8E;">) </span><span class="s1675">+ </span><span style=" color: #7C7C7C;">radius </span><span style=" color: #484848;">[</span>j] <span style=" color: #565656;">- d</span><span style=" color: #7C7C7C;">) </span>/ d) <span class="s1682">*</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 86pt;text-indent: 0pt;line-height: 208%;text-align: left;"><a name="bookmark103">delta</a><span style=" color: #828282;">_</span><span style=" color: #505050;">y; </span>mtd<span style=" color: #1D1D1D;">_</span>y);</p><p style="padding-top: 3pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">double <span style=" color: #727272;">mtd</span><span style=" color: #1D1D1D;">_</span>y <span class="s969">= </span>((radius[i) <span class="s964">+ </span>radius[j) - d} / d} <span class="s1684">*</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">double mtd_length <span style=" color: #727272;">Math.sqrt(mtd</span><span style=" color: #505050;">_x </span><span class="s1685">* </span>mtd_x <span class="s964">+ </span>mtd_y <span class="s1108">*</span></p><p style="padding-top: 10pt;padding-left: 22pt;text-indent: 0pt;line-height: 79%;text-align: left;">double mtd_norm_x <span class="s1686">= </span>mtd <span style=" color: #505050;">x </span>/ mtd_<span style=" color: #828282;">l</span>ength; doub<span style=" color: #828282;">l</span>e mtd<span style=" color: #828282;">_n</span>orm<span style=" color: #999;">_</span><span style=" color: #505050;">y </span><span class="s290">= </span>mtd_y / <span style=" color: #505050;">m</span><span style=" color: #727272;">td_length</span><span style=" color: #505050;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1201" style="padding-top: 5pt;text-indent: 0pt;line-height: 106%;text-align: right;">doub<span style=" color: #727272;">le </span>i<span style=" color: #727272;">ml </span><span style=" color: #606060;">double im2</span></p><p style="padding-top: 5pt;padding-left: 17pt;text-indent: 0pt;line-height: 10pt;text-align: left;">1.0 / <span style=" color: #727272;">radius[i)</span><span style=" color: #505050;">;</span></p><p style="padding-left: 17pt;text-indent: 0pt;line-height: 15pt;text-align: left;">1<span style=" color: #414141;">.</span>0 <span class="s1366">I </span><span style=" color: #727272;">radius[j);</span></p><p style="padding-top: 10pt;padding-left: 160pt;text-indent: 0pt;line-height: 79%;text-align: left;"><span style=" color: #505050;">x[</span><span style=" color: #828282;">i</span>) <span class="s99">+= </span>(iml / (iml <span class="s99">+ </span>im2)) <span class="s1608">* </span><span style=" color: #727272;">mt</span><span style=" color: #505050;">d x; </span>y[i) <span class="s30">+= </span>(iml / (iml <span class="s99">+ </span>im2)) <span class="s1688">* </span><span style=" color: #727272;">mt</span><span style=" color: #505050;">d_y;</span></p><p style="padding-top: 11pt;padding-left: 160pt;text-indent: 0pt;line-height: 84%;text-align: left;">x[j) <span style=" color: #727272;">+= </span><span style=" color: #505050;">-(im2 </span>/ (iml + im2}) <span class="s1608">* </span>mtd<span style=" color: #414141;">_x; </span><span style=" color: #505050;">y[j] </span>+= <span style=" color: #414141;">-</span>(im2 / (iml + <span style=" color: #727272;">im2}) </span><span class="s1684">* </span>mtd <span style=" color: #505050;">y;</span></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part30.htm">IIIII/IIII//I/I/III//I/IIIII//I/I///I</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part28.htm">&lt; Previous</a><span> | </span><a href="../index.html">Contents</a><span> | </span><a href="part30.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
