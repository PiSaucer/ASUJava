<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Java Project: Asteroids</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part20.htm">&lt; Previous</a><span> | </span><a href="../index.html">Contents</a><span> | </span><a href="part22.htm">Next &gt;</a></p><p class="s1183" style="padding-top: 3pt;padding-left: 89pt;text-indent: 0pt;text-align: left;"><a name="bookmark60">Java Project: Asteroids</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s111" style="padding-left: 88pt;text-indent: 0pt;line-height: 108%;text-align: left;">Description: <span style=" color: #545454;">C</span>r<span style=" color: #545454;">eat</span>e<span style=" color: #545454;">s </span>bla<span style=" color: #545454;">c</span>k<span style=" color: #545454;">/ w</span>hite a<span style=" color: #545454;">s</span>t<span style=" color: #545454;">er</span>o id en <span style=" color: #545454;">v</span>ironmen t. G<span style=" color: #545454;">re</span>at <span style=" color: #545454;">s</span>t<span style=" color: #545454;">ar</span>t fo<span style=" color: #545454;">r </span>a <span style=" color: #545454;">s</span>hootin<span style=" color: #545454;">g </span>game s<span style=" color: #545454;">i</span>milar to th<span style=" color: #545454;">e </span>o<span style=" color: #545454;">r</span>iginal ast<span style=" color: #545454;">er</span>oid<span style=" color: #545454;">s g</span>am<span style=" color: #545454;">e.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s111" style="padding-left: 88pt;text-indent: 0pt;text-align: left;">Sample Output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 161pt;text-indent: 0pt;text-align: left;"><span><img width="302" height="298" alt="image" src="Image_048.jpg"/></span></p><p class="s472" style="padding-top: 12pt;padding-left: 89pt;text-indent: 0pt;text-align: left;">package <span style=" color: #828282;">asteroids;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s532" style="padding-left: 89pt;text-indent: 0pt;text-align: left;"><span style=" color: #828282;">import </span><span style=" color: #6E6E6E;">jav</span>a<span style=" color: #3B3B3B;">.</span>aw<span style=" color: #6E6E6E;">t</span><span style=" color: #3B3B3B;">.</span><span style=" color: #6E6E6E;">Co</span>lor; <span style=" color: #828282;">import </span>java.<span style=" color: #6E6E6E;">a</span>wt<span style=" color: #3B3B3B;">.</span><span style=" color: #828282;">Fo</span>nt; <span style=" color: #828282;">impor</span>t j<span style=" color: #6E6E6E;">a</span>va.<span style=" color: #6E6E6E;">a</span>w<span style=" color: #6E6E6E;">t</span>.<span style=" color: #6E6E6E;">Gr</span>ap<span style=" color: #6E6E6E;">hics</span>;</p><p class="s532" style="padding-left: 89pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span style=" color: #6E6E6E;">import </span>jav<span style=" color: #6E6E6E;">a</span>.<span style=" color: #6E6E6E;">awt</span>.<span style=" color: #6E6E6E;">ev</span>e<span style=" color: #6E6E6E;">n</span>t<span style=" color: #3B3B3B;">.</span><span style=" color: #6E6E6E;">Ac</span>t<span style=" color: #3B3B3B;">i</span><span style=" color: #6E6E6E;">o</span>nEve<span style=" color: #3B3B3B;">n</span>t<span style=" color: #3B3B3B;">; </span><span style=" color: #6E6E6E;">import </span>j<span style=" color: #6E6E6E;">a</span>v<span style=" color: #6E6E6E;">a</span><span style=" color: #3B3B3B;">.</span><span style=" color: #6E6E6E;">a</span>w<span style=" color: #6E6E6E;">t</span><span style=" color: #3B3B3B;">.</span>eve<span style=" color: #6E6E6E;">n</span>t.Ac<span style=" color: #828282;">t</span>ion<span style=" color: #6E6E6E;">Li</span>ste<span style=" color: #6E6E6E;">n</span>e<span style=" color: #6E6E6E;">r</span>; <span style=" color: #6E6E6E;">import </span><span style=" color: #828282;">j</span>a<span style=" color: #6E6E6E;">va</span>x<span style=" color: #3B3B3B;">.</span>sw<span style=" color: #828282;">i</span>ng<span style=" color: #6E6E6E;">.</span>J<span style=" color: #6E6E6E;">F</span>rame;</p><p class="s532" style="padding-left: 89pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span style=" color: #828282;">import j</span>avax.sw<span style=" color: #6E6E6E;">i</span>n<span style=" color: #6E6E6E;">g</span>.<span style=" color: #6E6E6E;">J</span>Pa<span style=" color: #6E6E6E;">n</span>e<span style=" color: #6E6E6E;">l</span>; i<span style=" color: #6E6E6E;">mport j</span>av<span style=" color: #6E6E6E;">a</span><span style=" color: #3B3B3B;">x</span>.<span style=" color: #6E6E6E;">s</span>w<span style=" color: #6E6E6E;">i</span>ng.Ti<span style=" color: #6E6E6E;">m</span>e<span style=" color: #6E6E6E;">r</span><span style=" color: #3B3B3B;">;</span></p><p class="s472" style="padding-left: 116pt;text-indent: -26pt;line-height: 24pt;text-align: left;">public class Asteroids <span style=" color: #828282;">e</span><span style=" color: #545454;">x</span>tends JFrame { public static int W <span class="s1187">= </span>600 <span style=" color: #545454;">;</span></p><p class="s1185" style="padding-left: 116pt;text-indent: 0pt;line-height: 10pt;text-align: left;">public <span style=" color: #6E6E6E;">static i</span><span style=" color: #545454;">n</span>t <span class="s1188">H </span><span class="s1189">= </span>600;</p><p class="s472" style="padding-top: 12pt;padding-left: 116pt;text-indent: 0pt;line-height: 10pt;text-align: left;">public Asteroids() <span style=" color: #828282;">{</span></p><p class="s472" style="padding-left: 141pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Draw<span style=" color: #545454;">i</span>ngPanel drawingPanel <span class="s1102">= </span><span style=" color: #828282;">new DrawingPanel()</span><span style=" color: #545454;">; </span>drawingPanel<span style=" color: #545454;">.</span>setBac<span style=" color: #545454;">k</span>grou<span style=" color: #545454;">nd</span>(Color.black)<span style=" color: #545454;">; </span>this<span style=" color: #545454;">.</span>add(drawingPanel)<span style=" color: #545454;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s472" style="padding-left: 116pt;text-indent: 0pt;text-align: left;">static class DrawingPanel e<span style=" color: #545454;">x</span>tends JPanel {</p><p class="s124" style="padding-top: 5pt;padding-left: 136pt;text-indent: 0pt;line-height: 79%;text-align: left;"><a name="bookmark61">private Timer timer= new Timer(30, new TimerListener()); int </a><span style=" color: #707070;">m </span><span class="s1190">= </span>20; //po<span style=" color: #878787;">in</span>ts per <span style=" color: #707070;">poly</span></p><p class="s124" style="padding-left: 136pt;text-indent: 0pt;text-align: left;">int n = <span style=" color: #878787;">1</span>0; // <span style=" color: #707070;">number of polys </span>double[][] x = <span style=" color: #707070;">new </span>double[n]<span style=" color: #707070;">[m</span><span style=" color: #494949;">];</span></p><p class="s124" style="padding-left: 136pt;text-indent: 0pt;text-align: left;">double[][] y <span style=" color: #707070;">= new </span>double[n][m]; double[] dx = new double[n<span style=" color: #878787;">]</span>; double[] dy <span style=" color: #707070;">= </span>new double[n<span style=" color: #878787;">]</span>; <span style=" color: #707070;">double</span><span style=" color: #3A3A3A;">[] </span>speed= new <span style=" color: #707070;">double[n]; double maxRadius </span>= 30;</p><p class="s200" style="padding-left: 136pt;text-indent: 0pt;text-align: left;">double minRadius <span style=" color: #5E5E5E;">= 20;</span></p><p class="s124" style="padding-left: 136pt;text-indent: 0pt;text-align: left;"><span style=" color: #707070;">double[</span><span style=" color: #494949;">] </span>xCenter <span style=" color: #707070;">new double</span><span style=" color: #494949;">[n</span><span style=" color: #707070;">); double[</span><span style=" color: #494949;">] </span>yCenter = <span style=" color: #707070;">new double[n]</span><span style=" color: #494949;">; </span>public Color(<span style=" color: #878787;">] </span>color= new Color<span style=" color: #878787;">[</span>n); public <span style=" color: #707070;">double </span>maxSpeed 5;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s200" style="padding-left: 161pt;text-indent: -24pt;text-align: left;"><span style=" color: #5E5E5E;">public DrawingPanel() { initializePolygons(); </span>timer<span style=" color: #494949;">.</span>start();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s124" style="padding-top: 10pt;padding-left: 161pt;text-indent: -24pt;text-align: left;">private void <span style=" color: #707070;">initializePolygons() </span>double theta;</p><p class="s124" style="padding-left: 161pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><span style=" color: #707070;">for (inti= </span>0; i <span class="s849">&lt; </span>n; i++) {</p><p class="s200" style="padding-left: 186pt;text-indent: 0pt;text-align: left;">color[i<span style=" color: #494949;">] </span>= <span style=" color: #5E5E5E;">randomColor(); xCenter[i] </span>Math.random() <span style=" color: #5E5E5E;">* W; yCenter[i] </span>= Math.random() <span style=" color: #5E5E5E;">* H; for </span>(int <span class="s1192">k </span><span style=" color: #5E5E5E;">= 0; </span><span style=" color: #494949;">k </span><span class="s939">&lt; </span>m; <span class="s1193">k++) </span><span class="s778">{</span></p><p class="s124" style="padding-left: 212pt;text-indent: 0pt;line-height: 11pt;text-align: left;">theta= <span style=" color: #707070;">k </span>* 2.0 *Math.PI/ m;</p><p class="s124" style="padding-left: 211pt;text-indent: 0pt;line-height: 13pt;text-align: left;">doub<span style=" color: #878787;">l</span>e r = minRadius + (maxRadius <span style=" color: #494949;">- </span>minRadius) <span class="s1194">*</span></p><p class="s124" style="padding-left: 85pt;text-indent: 0pt;text-align: left;">Math<span style=" color: #3A3A3A;">.</span>random();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s124" style="padding-left: 31pt;text-indent: 0pt;line-height: 12pt;text-align: left;">//use <span style=" color: #707070;">this </span>line <span style=" color: #494949;">i</span><span style=" color: #707070;">f </span>you want regular polygons:</p><p class="s124" style="padding-left: 31pt;text-indent: 0pt;line-height: 12pt;text-align: left;">//doub<span style=" color: #878787;">l</span>e r = maxRadius;</p><p class="s200" style="padding-left: 31pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><span class="s1195">x</span><span class="s1196">[i</span><span class="s991">]</span>[k] <span style=" color: #5E5E5E;">= </span>r <span style=" color: #5E5E5E;">* Math.cos(theta);</span></p><p class="s124" style="padding-left: 31pt;text-indent: 0pt;line-height: 13pt;text-align: left;">y<span style=" color: #878787;">[i</span>]<span style=" color: #878787;">[k] </span><span style=" color: #707070;">= r </span><span class="s1197">* </span><span style=" color: #707070;">Math.sin(theta);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s124" style="padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;">speed<span style=" color: #878787;">[i</span><span style=" color: #494949;">] </span>= <span style=" color: #707070;">maxSpeed</span><span style=" color: #494949;">;</span></p><p class="s200" style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;">dx[i] <span style=" color: #5E5E5E;">2 </span><span class="s1194">* </span><span style=" color: #5E5E5E;">speed[i] </span><span class="s1198">* </span>Math<span style=" color: #3A3A3A;">.</span>random() <span style=" color: #232323;">- </span><span style=" color: #5E5E5E;">speed(i]; </span>dy[i] <span style=" color: #5E5E5E;">= 2 * speed[i] * </span>Math<span style=" color: #494949;">.r</span>andom() - <span style=" color: #5E5E5E;">speed</span><span style=" color: #3A3A3A;">[</span><span style=" color: #5E5E5E;">i];</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s124" style="padding-left: 161pt;text-indent: -25pt;text-align: left;">protected <span style=" color: #707070;">void </span>paintComponent(Graphics g) <span style=" color: #707070;">{ </span>super<span style=" color: #3A3A3A;">.</span>paintcomponent(g); <span style=" color: #707070;">updatePositions();</span></p><p class="s124" style="padding-left: 161pt;text-indent: 0pt;text-align: left;"><span style=" color: #707070;">checkBoundary()</span><span style=" color: #494949;">; </span>drawPo<span style=" color: #878787;">l</span>ygo<span style=" color: #878787;">n</span>s(g);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s124" style="padding-top: 10pt;padding-left: 161pt;text-indent: -25pt;line-height: 94%;text-align: left;">public void <span style=" color: #707070;">checkBoundary(} { </span>for <span style=" color: #707070;">(inti= 0; </span>i <span class="s848">&lt; </span><span style=" color: #878787;">n</span>; <span style=" color: #707070;">i++}</span></p><p class="s124" style="padding-left: 212pt;text-indent: -25pt;text-align: left;"><span style=" color: #707070;">if </span>(xCente<span style=" color: #878787;">r</span>[i<span style=" color: #878787;">] </span>+ maxRadius <span class="s939">&lt; </span>0} { xCenter[i<span style=" color: #878787;">] </span><span style=" color: #707070;">= </span>getWidth(} + <span style=" color: #707070;">maxRadius;</span></p><p class="s618" style="padding-top: 3pt;padding-left: 216pt;text-indent: 0pt;text-align: left;"><a name="bookmark62">//dx(i) = </a><span style=" color: #797979;">Math.abs(dx(il);</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-left: 216pt;text-indent: -25pt;text-align: left;">if <span style=" color: #797979;">(xCenter[i) </span>- <span style=" color: #797979;">maxRadius </span><span class="s52">&gt; </span>getWidth()) xCenter[i] <span style=" color: #797979;">= -maxRadius;</span></p><p class="s618" style="padding-left: 216pt;text-indent: 0pt;text-align: left;">//dx(il = -Math.abs(dx[il);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-left: 216pt;text-indent: -25pt;text-align: left;">if <span style=" color: #797979;">(yCenter(il </span><span class="s1200">+ </span>maxRadius <span class="s52">&lt; </span>0) <span style=" color: #797979;">yCenter</span><span style=" color: #505050;">[i</span><span style=" color: #797979;">l = </span>getHeight() + maxRadius;</p><p class="s618" style="padding-left: 216pt;text-indent: 0pt;text-align: left;">//dy[i<span style=" color: #909090;">l </span><span style=" color: #797979;">= </span>Math.abs(dy[i   <span style=" color: #909090;">l) </span>;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-left: 216pt;text-indent: -25pt;text-align: left;">if (yCenter[i] - maxRadius <span class="s52">&gt; </span>getHeight()) ycenter[i] = -maxRadius;</p><p class="s618" style="padding-left: 216pt;text-indent: 0pt;text-align: left;">//dy[<span style=" color: #909090;">i</span>l <span style=" color: #797979;">= </span>-Math <span style=" color: #3D3D3D;">. </span>abs(dy <span style=" color: #909090;">(i </span><span style=" color: #3D3D3D;">l </span>);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-left: 166pt;text-indent: -25pt;line-height: 106%;text-align: left;">private void <span style=" color: #797979;">updatePositions() </span>{ double alpha= 0.1;</p><p class="s618" style="padding-left: 166pt;text-indent: 0pt;line-height: 11pt;text-align: left;">for <span style=" color: #797979;">(int </span>i = <span class="s88">0; </span><span style=" color: #797979;">i </span><span class="s1203">&lt; </span>n; i++) {</p><p class="s330" style="padding-left: 191pt;text-indent: 0pt;line-height: 12pt;text-align: left;">for (int k <span style=" color: #676767;">= 0; k </span><span class="s52">&lt; </span>m<span style=" color: #505050;">; </span><span style=" color: #676767;">k++)</span></p><p class="s618" style="padding-top: 10pt;padding-left: 89pt;text-indent: 127pt;line-height: 83%;text-align: left;"><span style=" color: #797979;">double </span>newX <span style=" color: #505050;">= </span><span style=" color: #797979;">(x[il </span>[k <span style=" color: #909090;">l)  </span><span class="s1011">*  </span>Math.cos(alpha) + (y[i<span style=" color: #909090;">)[kl) </span><span class="s74">*  </span><span style=" color: #797979;">Math.sin(alpha)</span><span style=" color: #505050;">;</span></p><p class="s618" style="padding-left: 216pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><span style=" color: #797979;">double </span><span style=" color: #909090;">n</span>ewY <span style=" color: #797979;">= </span>-(x[il <span style=" color: #909090;">(</span>kl) <span class="s1012">* </span>Math.sin(alpha) <span style=" color: #797979;">+</span></p><p class="s618" style="padding-left: 90pt;text-indent: 0pt;line-height: 14pt;text-align: left;">(y(i<span style=" color: #909090;">)(</span>kl) <span class="s1011">* </span><span style=" color: #797979;">Math.cos(alpha)   </span><span style=" color: #505050;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-top: 5pt;padding-left: 217pt;text-indent: 0pt;line-height: 106%;text-align: left;"><span class="s89">X </span><span style=" color: #909090;">[i </span>l <span style=" color: #797979;">[k) </span>y <span style=" color: #909090;">[i </span><span style=" color: #505050;">l </span><span style=" color: #797979;">[kl</span></p><p class="s618" style="padding-top: 5pt;padding-left: 18pt;text-indent: 0pt;line-height: 106%;text-align: left;">newX; newY;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-top: 5pt;padding-left: 192pt;text-indent: 0pt;text-align: left;">xCenter(il += dx[il; yCenter(il += dy[il;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s618" style="padding-left: 166pt;text-indent: -25pt;line-height: 24pt;text-align: left;">class <span style=" color: #797979;">TimerListener </span>implements ActionListener { public void <span style=" color: #797979;">actionPerformed(ActionEvent </span>e) <span style=" color: #505050;">{</span></p><p class="s618" style="padding-top: 1pt;padding-left: 192pt;text-indent: 0pt;text-align: left;">repaint();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s330" style="padding-left: 166pt;text-indent: -25pt;line-height: 84%;text-align: left;"><span style=" color: #676767;">private void </span>drawPolygons(Graphics <span style=" color: #676767;">g) </span>{ <span style=" color: #676767;">for </span>(int <span style=" color: #676767;">i = O; </span>i <span class="s1204">&lt; </span>n; <span style=" color: #676767;">i++) {</span></p><p class="s330" style="padding-left: 192pt;text-indent: 0pt;text-align: left;">int[<span style=" color: #505050;">] </span>polyX <span class="s1205">= </span><span style=" color: #676767;">new int(m]; </span>int(] polyY <span style=" color: #676767;">= new int[ml;</span></p><p class="s618" style="padding-left: 192pt;text-indent: 0pt;line-height: 11pt;text-align: left;">//Color color= randomColor();</p><p class="s618" style="padding-left: 192pt;text-indent: 0pt;line-height: 10pt;text-align: left;">g.setColor(color[i]);</p><p class="s618" style="padding-left: 192pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span style=" color: #797979;">for (int </span>k <span class="s1206">= </span>0; k &lt; m; k++) {</p><p class="s618" style="padding-left: 217pt;text-indent: 0pt;line-height: 10pt;text-align: left;">polyX<span style=" color: #505050;">[k</span><span style=" color: #909090;">l </span>(int) (x[i)<span style=" color: #909090;">(</span>kl <span style=" color: #505050;">+ </span>xCenter<span style=" color: #505050;">[</span><span style=" color: #797979;">i])</span><span style=" color: #505050;">;</span></p><p class="s618" style="padding-left: 217pt;text-indent: 0pt;line-height: 13pt;text-align: left;">polyY[k<span style=" color: #909090;">) </span><span class="s64">= </span><span style=" color: #797979;">(</span><span style=" color: #505050;">int) </span>(y[i]<span style=" color: #909090;">(</span>kl <span style=" color: #505050;">+ yCen </span><span style=" color: #797979;">ter </span><span style=" color: #3D3D3D;">[ </span>i]);</p><p style="padding-top: 4pt;padding-left: 186pt;text-indent: 0pt;line-height: 106%;text-align: left;"><a name="bookmark63">//g.fillPolygon(polyX, polyY, m); g.setColor(Color.white); g.drawPolygon(polyX, polyY, m);</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 161pt;text-indent: -24pt;line-height: 106%;text-align: left;">private <span style=" color: #4D4D4D;">Color ra</span><span style=" color: #757575;">ndomColor() </span>{ Color color= new Color(</p><table style="border-collapse:collapse;margin-left:209.218pt" cellspacing="0"><tr style="height:12pt"><td style="width:38pt"><p class="s1207" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;line-height: 11pt;text-align: center;">(int)</p></td><td style="width:32pt"><p class="s1207" style="padding-right: 2pt;text-indent: 0pt;line-height: 11pt;text-align: right;">(256</p></td><td style="width:115pt"><p class="s1207" style="padding-left: 2pt;text-indent: 0pt;line-height: 11pt;text-align: left;">* Math<span style=" color: #313131;">.</span>random()),</p></td></tr><tr style="height:12pt"><td style="width:38pt"><p class="s1207" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;line-height: 11pt;text-align: center;">(int)</p></td><td style="width:32pt"><p class="s1207" style="padding-right: 2pt;text-indent: 0pt;line-height: 11pt;text-align: right;">(256</p></td><td style="width:115pt"><p class="s1207" style="padding-left: 2pt;text-indent: 0pt;line-height: 11pt;text-align: left;"><span style=" color: #4D4D4D;">* </span>Math<span style=" color: #313131;">.</span>random()),</p></td></tr><tr style="height:12pt"><td style="width:38pt"><p class="s1207" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;line-height: 10pt;text-align: center;">(int)</p></td><td style="width:32pt"><p class="s1207" style="padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: right;">(256</p></td><td style="width:115pt"><p class="s1207" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">*Math.random())</p></td></tr></table><p class="s965" style="padding-left: 162pt;text-indent: 0pt;text-align: left;">) <span class="s1106">;</span></p><p style="padding-top: 2pt;padding-left: 161pt;text-indent: 0pt;text-align: left;">return color;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 136pt;text-indent: -24pt;text-align: justify;">public static void main(String[] args) Asteroids frame= new Asteroids(); frame.setTitle(&quot;Drawings&quot;);</p><p style="padding-left: 136pt;text-indent: 0pt;line-height: 106%;text-align: left;">frame<span style=" color: #313131;">.</span>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.setSize(W, H);</p><p style="padding-left: 136pt;text-indent: 0pt;text-align: left;">frame.setvisible(true);</p><p class="s1211" style="padding-top: 2pt;padding-left: 89pt;text-indent: 0pt;text-align: justify;"><a name="bookmark64">Java Project: </a><span class="s1212">RockPaperScissors</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s547" style="padding-left: 89pt;text-indent: 0pt;text-align: justify;"><span class="s1213">Description: </span><span style=" color: #2F2F2F;">Play </span>rock-paper <span style=" color: #5B5B5B;">-</span>scissors against <span style=" color: #2F2F2F;">the </span>computer. <span style=" color: #2F2F2F;">The </span>user can <span style=" color: #2F2F2F;">program </span>variou<span style=" color: #5B5B5B;">s </span>strategies for <span style=" color: #2F2F2F;">the </span>computer to <span style=" color: #2F2F2F;">use when playing </span>a <span style=" color: #2F2F2F;">human. </span>Several <span style=" color: #2F2F2F;">pictures </span>are <span style=" color: #2F2F2F;">needed: rong.png, paper.png, scissors.png </span>etc.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part22.htm">Sample Output:</a><a class="toc0" href="part23.htm">Need images:</a><a class="toc0" href="part24.htm">Sample Output:</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part20.htm">&lt; Previous</a><span> | </span><a href="../index.html">Contents</a><span> | </span><a href="part22.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
